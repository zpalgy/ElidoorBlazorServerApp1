@page "/Decor"

@using BlazorServerApp1.Pages
@using BlazorServerApp1.Data
@using System.Data;

@inject IJSRuntime Js

@inject NavigationManager Navigator



@code
{
    [Parameter]
    public DoorConfig doorConfig { get; set; }

    [Parameter]
    public Configurator4 config4 { get; set; }

    protected bool openMsgBox = false;
    private bool openYesNo = false;
    string errMsg2 = string.Empty;
    string errMsg3 = "xxxxxxxxxxxxxxxxxx";
    private string msgCaption = "שגיאה";
    string msgClass = "modal-body centeredMsg";
    private string MsgTitleCssClass = string.Empty;
    string msgHeaderClass = "modal-header";
    string msgBorder1Style = string.Empty;

    private string ErrMsgCssClass = "modal-body centeredMsg"; //"modal-body";  // "modal-body centeredMsg" 
    string YNissue = string.Empty;
    private bool ansYes = false;


    string NoColor = "מגולוון";

    protected override async Task OnInitializedAsync()
    {
        string errMsg = string.Empty;
        doorConfig.currTabName = "movingwing";    //TODO : for getting nextTab we may want to use "movingwing" .
                                                  // check whether we should use "decor" which is the right name

        doorConfig.dtTabFlds = UiLogic.getTabFields("decor", doorConfig, ref errMsg);
        // config4.RefreshState();  //just for a test - works !

        // clear disabled fields :
        doorConfig.EXTFINMODERNCPLATE =  (doorConfig.DECORFORMAT == UiLogic.Internal ? string.Empty : doorConfig.EXTFINMODERNCPLATE);
        doorConfig.EXTFINMODERNPLATE =   (doorConfig.DECORFORMAT == UiLogic.Internal ? string.Empty : doorConfig.EXTFINMODERNPLATE);
        doorConfig.EXTFINMODERNSEPLINE = (doorConfig.DECORFORMAT == UiLogic.Internal ? string.Empty : doorConfig.EXTFINMODERNSEPLINE);

        doorConfig.INTFINMODERNCPLATE =  (doorConfig.DECORFORMAT == UiLogic.External ? string.Empty : doorConfig.INTFINMODERNCPLATE);
        doorConfig.INTFINMODERNPLATE =   (doorConfig.DECORFORMAT == UiLogic.External ? string.Empty : doorConfig.INTFINMODERNPLATE);
        doorConfig.INTFINMODERNSEPLINE = (doorConfig.DECORFORMAT == UiLogic.External ? string.Empty : doorConfig.INTFINMODERNSEPLINE);
    }

}

 <br/>
    <table>
    <tr>
        <td>
            <div class="tabPageTitle">
                <h1 class="rightLeftMargin">עיצוב</h1>
            </div>
        </td>
    </tr>
</table>
<table id="tblDecor1">
    <tr id="tblDecorL1h">
        <th>לוח מרכזי חוץ</th>      @* D-850 EXTFINMODERNCPLATE *@
        <th>צבע לוח מרכזי חוץ</th>
        <th>לוחות חיפוי חוץ</th>    @* D-1000 EXTFINMODERNPLATE *@
        <th>צבע לוחות חיפוי חוץ</th>
        <th>פסי הפרדה חוץ</th>
        <th>סוג פסים</th>
        <th>צבע פסי הפרדה חוץ</th>
        <th>צבע פרופיל היקפי חוץ</th>
        <th>צבע חוץ לאינסרט</th>
    </tr>

    <tr id="tblDecorL1d">
        @*  hidden="@UiLogic.hideFld(doorConfig, "tdExtFinModernCPlate") *@
        <td id="tdExtFinModernCPlate" >
            <select name="dlstExtFinModernCPlate" @bind="ExtFinModernCPlate"
                    disabled="@(doorConfig.DECORFORMAT==UiLogic.Internal)"
                    class="@doorConfig.borderColors["EXTFINMODERNCPLATE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _ExtFinModernCPlate = string.Empty;
            protected string ExtFinModernCPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtFinModernCPlate = doorConfig.EXTFINMODERNCPLATE;
                    }
                    return _ExtFinModernCPlate;
                }
                set
                {
                    _ExtFinModernCPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNCPLATE = _ExtFinModernCPlate;
                        doorConfig.borderColors["EXTFINMODERNCPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "extdecor");
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtModerCPlateClr")" *@
        <td id="tdExtModerCPlateClr" >
            @{
                int i408 = Array.IndexOf(UiLogic.propNames, "EXTMODERNCPLATECLRID");
                <select name="dlstExtModerCPlateClr" @bind="ExtModerCPlateClr" class="@doorConfig.borderColors["EXTMODERNCPLATECLRID"]"
                        disabled="@(doorConfig.DECORFORMAT==UiLogic.Internal)"
                        @onfocus="@( () => UiLogic.HasFocus("EXTMODERNCPLATECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i408]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _ExtModerCPlateClr = 0;
            protected int ExtModerCPlateClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtModerCPlateClr = doorConfig.EXTMODERNCPLATECLRID;
                    }
                    return _ExtModerCPlateClr;
                }
                set
                {
                    _ExtModerCPlateClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTMODERNCPLATECLRID = _ExtModerCPlateClr;
                        doorConfig.borderColors["EXTMODERNCPLATECLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "extdecor");
                    }
                }
            }
        }
        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtFinModernPlate")" *@
        <td id="tdExtFinModernPlate" >
            <select name="dlstExtFinModernPlate" @bind="ExtFinModernPlate"
                    disabled="@(doorConfig.DECORFORMAT==UiLogic.Internal)"
                    class="@doorConfig.borderColors["EXTFINMODERNPLATE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _ExtFinModernPlate = string.Empty;
            protected string ExtFinModernPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtFinModernPlate = doorConfig.EXTFINMODERNPLATE;
                    }
                    return _ExtFinModernPlate;
                }
                set
                {
                    _ExtFinModernPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNPLATE = _ExtFinModernPlate;
                        doorConfig.borderColors["EXTFINMODERNPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "extdecor");
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "thExtModerPlateClr")"  *@
        <td id="tdExtModerPlateClr" >
            @{
                int i413 = Array.IndexOf(UiLogic.propNames, "EXTMODERNPLATECLRID");
                <select name="dlstExtModerPlateClr" @bind="ExtModerPlateClr" class="@doorConfig.borderColors["EXTMODERNPLATECLRID"]"
                    disabled="@(doorConfig.DECORFORMAT==UiLogic.Internal)"
                        @onfocus="@( () => UiLogic.HasFocus("EXTMODERNPLATECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i413]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _ExtModerPlateClr = 0;
            protected int ExtModerPlateClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtModerPlateClr = doorConfig.EXTMODERNPLATECLRID;
                    }
                    return _ExtModerPlateClr;
                }
                set
                {
                    _ExtModerPlateClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTMODERNPLATECLRID = _ExtModerPlateClr;
                        doorConfig.borderColors["EXTMODERNPLATECLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "extdecor");
                    }
                }
            }
        }
        <td id="tdExtSepLines" >
            <select name="dlstExtSepLines" @bind="ExtSepLines"
                    disabled="@(doorConfig.DECORFORMAT==UiLogic.Internal)"
                    class="@doorConfig.borderColors["EXTSEPLINES"]">
                <option></option>
                <option>עם</option>
                <option>ללא</option>
            </select>
        </td>
        @code
        {
            protected string _ExtSepLines = string.Empty;
            protected string ExtSepLines
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtSepLines = doorConfig.EXTSEPLINES;
                    }
                    return _ExtSepLines;
                }
                set
                {
                    _ExtSepLines = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTSEPLINES = _ExtSepLines;
                        doorConfig.borderColors["EXTSEPLINES"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "extdecor");
                    }
                }
            }
        }
        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtFinModernSepLine")" *@
        <td id="tdExtFinModernSepLine" >
            <select name="dlstExtFinModernSepLine" @bind="ExtFinModernSepLine"
                    disabled="@(doorConfig.DECORFORMAT==UiLogic.Internal)"
                    class="@doorConfig.borderColors["EXTFINMODERNSEPLINE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _ExtFinModernSepLine = string.Empty;
            protected string ExtFinModernSepLine
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtFinModernSepLine = doorConfig.EXTFINMODERNSEPLINE;
                    }
                    return _ExtFinModernSepLine;
                }
                set
                {
                    _ExtFinModernSepLine = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNSEPLINE = _ExtFinModernSepLine;
                        doorConfig.borderColors["EXTFINMODERNSEPLINE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "extdecor");
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtSepLinesClr")" *@
        <td id="tdExtSepLinesClr" >
            @{
                int i405 = Array.IndexOf(UiLogic.propNames, "EXTSEPLINESCLRID");
                <select name="dlstExtSepLinesClr" @bind="ExtSepLinesClr" class="@doorConfig.borderColors["EXTSEPLINESCLRID"]"
                        disabled="@(doorConfig.DECORFORMAT==UiLogic.Internal)"
                        @onfocus="@( () => UiLogic.HasFocus("EXTSEPLINESCLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i405]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _ExtSepLinesClr = 0;
            protected int ExtSepLinesClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtSepLinesClr = doorConfig.EXTSEPLINESCLRID;
                    }
                    return _ExtSepLinesClr;
                }
                set
                {
                    _ExtSepLinesClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTSEPLINESCLRID = _ExtSepLinesClr;
                        doorConfig.borderColors["EXTSEPLINESCLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "extdecor");
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtPerifProfileClr")" *@
        <td id="tdExtPerifProfileClr" >
            @{
                int i407 = Array.IndexOf(UiLogic.propNames, "EXTPERIFPROFILECLRID");
                <select name="dlstExtPerifProfileClr" @bind="ExtPerifProfileClr" class="@doorConfig.borderColors["EXTPERIFPROFILECLRID"]"
                    disabled="@(doorConfig.DECORFORMAT==UiLogic.Internal)"
                        @onfocus="@( () => UiLogic.HasFocus("EXTPERIFPROFILECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i407]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _ExtPerifProfileClr = 0;
            protected int ExtPerifProfileClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtPerifProfileClr = doorConfig.EXTPERIFPROFILECLRID;
                    }
                    return _ExtPerifProfileClr;
                }
                set
                {
                    _ExtPerifProfileClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTPERIFPROFILECLRID = _ExtPerifProfileClr;
                        doorConfig.borderColors["EXTPERIFPROFILECLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "extdecor");
                    }
                }
            }
        }
        @* hidden="@UiLogic.hideFld(doorConfig, "thExtInsertCoverClr")" *@
        <td id="tdExtInsertCoverClr" >
            @{
                int i417 = Array.IndexOf(UiLogic.propNames, "EXTINSERTCLRID");
                <select name="dlstExtInsertCoverClr" @bind="ExtInsertCoverClr" class="@doorConfig.borderColors["EXTINSERTCLRID"]"
                    disabled="@(doorConfig.DECORFORMAT==UiLogic.Internal)"
                        @onfocus="@( () => UiLogic.HasFocus("EXTINSERTCLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i417]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _ExtInsertCoverClr = 0;
            protected int ExtInsertCoverClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtInsertCoverClr = doorConfig.EXTINSERTCLRID;
                    }
                    return _ExtInsertCoverClr;
                }
                set
                {
                    _ExtInsertCoverClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTINSERTCLRID = _ExtInsertCoverClr;
                        doorConfig.borderColors["EXTINSERTCLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "extdecor");
                    }
                }
            }
        }
    </tr>
    <tr id="tblDecorL2h">
        <th>לוח מרכזי פנים</th>
        <th>צבע לוח מרכזי פנים</th>
        <th>לוחות חיפוי פנים</th>
        <th>צבע לוחות חיפוי פנים</th>
        <th>פסי הפרדה פנים</th>
        <th>סוגי פסים</th>
        <th>צבע פסי הפרדה פנים</th>
        <th>צבע פרופיל היקפי פנים</th>
        <th>צבע פנים לאינסרט</th>

    </tr>
    @{
        // debug
        bool dbg10 = (doorConfig.DECORFORMAT == UiLogic.External); //UiLogic.hideFld(doorConfig, "tdIntFinModernCPlate");
        doorConfig.disabledFlds["INTFINMODERNCPLATE"] = (doorConfig.DECORFORMAT == UiLogic.External);
        bool dbg11 = UiLogic.hideFld(doorConfig, "tdIntModerCPlateClr");
        bool dbg12 = UiLogic.hideFld(doorConfig, "tdIntFinModernPlate");
        bool dbg13 = UiLogic.hideFld(doorConfig, "thIntModerPlateClr");
        bool dbg14 = UiLogic.hideFld(doorConfig, "tdIntSepLines");
        bool dbg15 = UiLogic.hideFld(doorConfig, "tdIntFinModernSepLine");
        bool dbg16 = UiLogic.hideFld(doorConfig, "tdIntSepLinesClr");
        bool dbg17 = UiLogic.hideFld(doorConfig, "tdIntPerifProfileClr");
        bool dbg18 = UiLogic.hideFld(doorConfig, "thIntInsertCoverClr");
    }
    <tr id="tblDecorL2d">
        @* disabled="@UiLogic.hideFld(doorConfig, "tdIntFinModernCPlate")"  *@
        <td id="tdIntFinModernCPlate">
            <select name="dlstIntFinModernCPlate" @bind="IntFinModernCPlate"
                    disabled="@(doorConfig.DECORFORMAT == UiLogic.External)"
                    class="@doorConfig.borderColors["INTFINMODERNCPLATE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _IntFinModernCPlate = string.Empty;
            protected string IntFinModernCPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntFinModernCPlate = doorConfig.INTFINMODERNCPLATE;
                    }
                    return _IntFinModernCPlate;
                }
                set
                {
                    _IntFinModernCPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTFINMODERNCPLATE = _IntFinModernCPlate;
                        doorConfig.borderColors["INTFINMODERNCPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "decor");
                    }
                }
            }
        }

        <td id="tdIntModerCPlateClr" disabled="@UiLogic.hideFld(doorConfig, "tdIntModerCPlateClr")">
            @{
                int i1411 = Array.IndexOf(UiLogic.propNames, "INTMODERNCPLATECLRID");
                <select name="dlstIntModerCPlateClr" @bind="IntModernCPlateClr" class="@doorConfig.borderColors["INTMODERNCPLATECLRID"]"
                        disabled="@(doorConfig.DECORFORMAT == UiLogic.External)"
                        @onfocus="@( () => UiLogic.HasFocus("INTMODERNCPLATECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i1411]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _IntModernCPlateClr = 0;
            protected int IntModernCPlateClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntModernCPlateClr = doorConfig.INTMODERNCPLATECLRID;
                    }
                    return _IntModernCPlateClr;
                }
                set
                {
                    _IntModernCPlateClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTMODERNCPLATECLRID = _IntModernCPlateClr;
                        doorConfig.borderColors["INTMODERNCPLATECLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                    }
                }
            }
        }
        <td id="tdIntFinModernPlate" disabled="@UiLogic.hideFld(doorConfig, "tdIntFinModernPlate")">
            <select name="dlstIntFinModernPlate" @bind="IntFinModernPlate"
                    disabled="@(doorConfig.DECORFORMAT == UiLogic.External)"
                    class="@doorConfig.borderColors["INTFINMODERNPLATE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _IntFinModernPlate = string.Empty;
            protected string IntFinModernPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntFinModernPlate = doorConfig.INTFINMODERNPLATE;
                    }
                    return _IntFinModernPlate;
                }
                set
                {
                    _IntFinModernPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTFINMODERNPLATE = _IntFinModernPlate;
                        doorConfig.borderColors["INTFINMODERNPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                    }
                }
            }
        }
        <td id="tdIntModerPlateClr" disabled="@UiLogic.hideFld(doorConfig, "thIntModerPlateClr")">
            @{
                int i1413 = Array.IndexOf(UiLogic.propNames, "INTMODERNPLATECLRID");
                <select name="dlstIntModerPlateClr" @bind="IntModerPlateClr" class="@doorConfig.borderColors["INTMODERNPLATECLRID"]"
                        disabled="@(doorConfig.DECORFORMAT == UiLogic.External)"
                        @onfocus="@( () => UiLogic.HasFocus("INTMODERNPLATECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i1413]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _IntModerPlateClr = 0;
            protected int IntModerPlateClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntModerPlateClr = doorConfig.INTMODERNPLATECLRID;
                    }
                    return _IntModerPlateClr;
                }
                set
                {
                    _IntModerPlateClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTMODERNPLATECLRID = _IntModerPlateClr;
                        doorConfig.borderColors["INTMODERNPLATECLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                    }
                }
            }
        }
        <td id="tdIntSepLines"  disabled ="true">
            <select name="dlstIntSepLines" @bind="IntSepLines"
                    disabled="@(doorConfig.DECORFORMAT == UiLogic.External)"
                    class="@doorConfig.borderColors["INTSEPLINES"]">
                <option></option>
                <option>עם</option>
                <option>ללא</option>
            </select>
        </td>
        @code
        {
            protected string _IntSepLines = string.Empty;
            protected string IntSepLines
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntSepLines = doorConfig.INTSEPLINES;
                    }
                    return _IntSepLines;
                }
                set
                {
                    _IntSepLines = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTSEPLINES = _IntSepLines;
                        doorConfig.borderColors["INTSEPLINES"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                    }
                }
            }
        }
        <td id="tdIntFinModernSepLine" disabled="@UiLogic.hideFld(doorConfig, "tdIntFinModernSepLine")">
            <select name="dlstIntFinModernSepLine" @bind="IntFinModernSepLine"
                    disabled="@(doorConfig.DECORFORMAT == UiLogic.External)"
                    class="@doorConfig.borderColors["INTFINMODERNSEPLINE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _IntFinModernSepLine = string.Empty;
            protected string IntFinModernSepLine
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntFinModernSepLine = doorConfig.INTFINMODERNSEPLINE;
                    }
                    return _IntFinModernSepLine;
                }
                set
                {
                    _IntFinModernSepLine = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTFINMODERNSEPLINE = _IntFinModernSepLine;
                        doorConfig.borderColors["INTFINMODERNSEPLINE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                    }
                }
            }
        }
        <td id="tdIntSepLinesClr" disabled="@UiLogic.hideFld(doorConfig, "tdIntSepLinesClr")">
            @{
                int i1416 = Array.IndexOf(UiLogic.propNames, "INTSEPLINESCLRID");
                <select name="dlstIntSepLinesClr" @bind="IntSepLinesClr" class="@doorConfig.borderColors["INTSEPLINESCLRID"]"
                        disabled="@(doorConfig.DECORFORMAT == UiLogic.External)"
                        @onfocus="@( () => UiLogic.HasFocus("INTSEPLINESCLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i1416]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _IntSepLinesClr = 0;
            protected int IntSepLinesClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntSepLinesClr = doorConfig.INTSEPLINESCLRID;
                    }
                    return _IntSepLinesClr;
                }
                set
                {
                    _IntSepLinesClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTSEPLINESCLRID = _IntSepLinesClr;
                        doorConfig.borderColors["INTSEPLINESCLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                    }
                }
            }
        }
        <td id="tdIntPerifProfileClr" disabled="@UiLogic.hideFld(doorConfig, "tdIntPerifProfileClr")">
            @{
                int i1417 = Array.IndexOf(UiLogic.propNames, "INTPERIFPROFILECLRID");
                <select name="dlstIntPerifProfileClr" @bind="IntPerifProfileClr" class="@doorConfig.borderColors["INTPERIFPROFILECLRID"]"
                    disabled="@(doorConfig.DECORFORMAT == UiLogic.External)"
                        @onfocus="@( () => UiLogic.HasFocus("INTPERIFPROFILECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i1417]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _IntPerifProfileClr = 0;
            protected int IntPerifProfileClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntPerifProfileClr = doorConfig.INTPERIFPROFILECLRID;
                    }
                    return _IntPerifProfileClr;
                }
                set
                {
                    _IntPerifProfileClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTPERIFPROFILECLRID = _IntPerifProfileClr;
                        doorConfig.borderColors["INTPERIFPROFILECLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "decor");
                    }
                }
            }
        }
        <td id="tdIntInsertCoverClr" disabled="@UiLogic.hideFld(doorConfig, "thIntInsertCoverClr")">
            @{
                int i1418 = Array.IndexOf(UiLogic.propNames, "EXTINSERTCLRID");
                <select name="dlstIntInsertCoverClr" @bind="IntInsertCoverClr" class="@doorConfig.borderColors["INTINSERTCLRID"]"
                        disabled="@(doorConfig.DECORFORMAT == UiLogic.External)"
                        @onfocus="@( () => UiLogic.HasFocus("INTINSERTCLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i1418]]">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.TRSH_COLORID">@c.PARTDES</option>
                        }
                    }
                </select>
            }
        </td>
        @code
        {
            protected int _IntInsertCoverClr = 0;
            protected int IntInsertCoverClr
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntInsertCoverClr = doorConfig.INTINSERTCLRID;
                    }
                    return _IntInsertCoverClr;
                }
                set
                {
                    _IntInsertCoverClr = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTINSERTCLRID = _IntInsertCoverClr;
                        doorConfig.borderColors["INTINSERTCLRID"] = (value != 0 ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                    }
                }
            }
        }
    </tr>
</table>


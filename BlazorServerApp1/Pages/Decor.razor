@page "/Decor"

@using BlazorServerApp1.Pages
@using BlazorServerApp1.Data
@using System.Data;

@inject IJSRuntime Js

@inject NavigationManager Navigator



@code
{
    [Parameter]
    public DoorConfig doorConfig { get; set; }

    [Parameter]
    public Configurator4 config4 { get; set; }

    protected bool openMsgBox = false;
    private bool openYesNo = false;
    string errMsg2 = string.Empty;
    string errMsg3 = "xxxxxxxxxxxxxxxxxx";
    private string msgCaption = "שגיאה";
    string msgClass = "modal-body centeredMsg";
    private string MsgTitleCssClass = string.Empty;
    string msgHeaderClass = "modal-header";
    string msgBorder1Style = string.Empty;

    private string ErrMsgCssClass = "modal-body centeredMsg"; //"modal-body";  // "modal-body centeredMsg" 
    string YNissue = string.Empty;
    private bool ansYes = false;


    string NoColor = "מגולוון";

    protected override async Task OnInitializedAsync()
    {
        string errMsg = string.Empty;
        doorConfig.currTabName = "movingwing";    //TODO : for getting nextTab we may want to use "movingwing" .
                                                  // check whether we should use "decor" which is the right name

        doorConfig.dtTabFlds = UiLogic.getTabFields("decor", doorConfig, ref errMsg);
        // config4.RefreshState();  //just for a test - works !

        // clear disabled fields :
        doorConfig.EXTFINMODERNCPLATE =  (doorConfig.DECORFORMAT == UiLogic.Internal ? string.Empty : doorConfig.EXTFINMODERNCPLATE);
        doorConfig.EXTFINMODERNPLATE =   (doorConfig.DECORFORMAT == UiLogic.Internal ? string.Empty : doorConfig.EXTFINMODERNPLATE);
        doorConfig.EXTFINMODERNSEPLINE = (doorConfig.DECORFORMAT == UiLogic.Internal ? string.Empty : doorConfig.EXTFINMODERNSEPLINE);

        doorConfig.INTFINMODERNCPLATE =  (doorConfig.DECORFORMAT == UiLogic.External ? string.Empty : doorConfig.INTFINMODERNCPLATE);
        doorConfig.INTFINMODERNPLATE =   (doorConfig.DECORFORMAT == UiLogic.External ? string.Empty : doorConfig.INTFINMODERNPLATE);
        doorConfig.INTFINMODERNSEPLINE = (doorConfig.DECORFORMAT == UiLogic.External ? string.Empty : doorConfig.INTFINMODERNSEPLINE);

        setDisabled();

    }
    void setDisabled()  // used in UiLogic.doorFldIsFilled(...)
    {
        doorConfig.disabledFlds["EXTFINMODERNCPLATE"] =
        doorConfig.disabledFlds["EXTMODERNCPLATECLRID"] =
        doorConfig.disabledFlds["EXTFINMODERNPLATE"] =
        doorConfig.disabledFlds["EXTMODERNPLATECLRID"] =
        doorConfig.disabledFlds["EXTSEPLINES"] =
        doorConfig.disabledFlds["EXTFINMODERNSEPLINE"] =
        doorConfig.disabledFlds["EXTSEPLINESCLRID"] =
        doorConfig.disabledFlds["EXTPERIFPROFILECLRID"] =
        doorConfig.disabledFlds["EXTINSERTCLRID"] = (doorConfig.DECORFORMAT == UiLogic.Internal);

       doorConfig.disabledFlds["INTFINMODERNCPLATE"] =
       doorConfig.disabledFlds["INTMODERNCPLATECLRID"] =
       doorConfig.disabledFlds["INTFINMODERNPLATE"] =
       doorConfig.disabledFlds["INTMODERNPLATECLRID"] =
       doorConfig.disabledFlds["INTSEPLINES"] =
       doorConfig.disabledFlds["INTFINMODERNSEPLINE"] =
       doorConfig.disabledFlds["INTSEPLINESCLRID"] =
       doorConfig.disabledFlds["INTPERIFPROFILECLRID"] =
       doorConfig.disabledFlds["INTINSERTCLRID"] = (doorConfig.DECORFORMAT == UiLogic.External);
    }
}



 <br/>
    <table>
    <tr>
        <td>
            <div class="tabPageTitle">
                <h1 class="rightLeftMargin">עיצוב</h1>
            </div>
        </td>
    </tr>
</table>
<table id="tblDecor1">
    <tr id="tblDecorL1h">
        <th>לוח מרכזי חוץ</th>      
    @* D-850 EXTFINMODERNCPLATE *@
        <th>צבע לוח מרכזי חוץ</th>
        <th>לוחות חיפוי חוץ</th>    @* D-1000 EXTFINMODERNPLATE *@
        <th>צבע לוחות חיפוי חוץ</th>
        <th>פסי הפרדה חוץ</th>
        <th>סוג פסים</th>
        <th>צבע פסי הפרדה חוץ</th>
        <th>צבע פרופיל היקפי חוץ</th>
        <th>צבע חוץ לאינסרט</th>
    </tr>

    <tr id="tblDecorL1d">
        @*  hidden="@UiLogic.hideFld(doorConfig, "tdExtFinModernCPlate") *@
        <td id="tdExtFinModernCPlate" >
            <select name="dlstExtFinModernCPlate" @bind="ExtFinModernCPlate"
                    disabled="@doorConfig.disabledFlds["EXTFINMODERNCPLATE"]"
                    class="@doorConfig.borderColors["EXTFINMODERNCPLATE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _ExtFinModernCPlate = string.Empty;
            protected string ExtFinModernCPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtFinModernCPlate = doorConfig.EXTFINMODERNCPLATE;
                    }
                    return _ExtFinModernCPlate;
                }
                set
                {
                    _ExtFinModernCPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNCPLATE = _ExtFinModernCPlate;
                        doorConfig.borderColors["EXTFINMODERNCPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtModerCPlateClr")" *@
        <td id="tdExtModerCPlateClr" >
            @{
                int i408 = Array.IndexOf(UiLogic.propNames, "EXTMODERNCPLATECLRID");
                @* <select name="dlstExtModerCPlateClr" @bind="ExtModerCPlateClr" class="@doorConfig.borderColors["EXTMODERNCPLATECLRID"]" *@

                    <input list="lstExtCPColors" name="dlstExtModerCPlateClr" @bind="ExtCPClrDes" class="@doorConfig.borderColors["EXTMODERNCPLATECLRID"]"
                    autocomplete="off"
                    disabled="@doorConfig.disabledFlds["EXTMODERNCPLATECLRID"]"
                        @onfocus="@( () => UiLogic.HasFocus("EXTMODERNCPLATECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i408]]"
                   />
                   <datalist id="lstExtCPColors" >
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtModerCPlateClr = 0;
            //protected int ExtModerCPlateClr
            protected string ExtCPClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtModerCPlateClr = doorConfig.EXTMODERNCPLATECLRID;
                    }
                    return UiLogic.colorDes(_ExtModerCPlateClr);
                }
                set
                {
                    _ExtModerCPlateClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTMODERNCPLATECLRID = _ExtModerCPlateClr;
                        doorConfig.borderColors["EXTMODERNCPLATECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtFinModernPlate")" *@
        <td id="tdExtFinModernPlate" >
            <select name="dlstExtFinModernPlate" @bind="ExtFinModernPlate"
                    disabled="@doorConfig.disabledFlds["EXTFINMODERNPLATE"]"
                    class="@doorConfig.borderColors["EXTFINMODERNPLATE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _ExtFinModernPlate = string.Empty;
            protected string ExtFinModernPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtFinModernPlate = doorConfig.EXTFINMODERNPLATE;
                    }
                    return _ExtFinModernPlate;
                }
                set
                {
                    _ExtFinModernPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNPLATE = _ExtFinModernPlate;
                        doorConfig.borderColors["EXTFINMODERNPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "thExtModerPlateClr")"  *@
        <td id="tdExtModerPlateClr" >
            @{
                int i413 = Array.IndexOf(UiLogic.propNames, "EXTMODERNPLATECLRID");
                @* <select name="dlstExtModerPlateClr" @bind="ExtModerPlateClr" class="@doorConfig.borderColors["EXTMODERNPLATECLRID"]" *@
                <input list="lstExtPColors" name="dlstExtModerPlateClr" @bind="ExtPClrDes" class="@doorConfig.borderColors["EXTMODERNPLATECLRID"]"
                        autocomplete="off"
                        disabled="@doorConfig.disabledFlds["EXTMODERNPLATECLRID"]"
                        @onfocus="@( () => UiLogic.HasFocus("EXTMODERNPLATECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i413]]"
                       />
                <datalist id="lstExtPColors">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtModerPlateClr = 0;
            //protected int ExtModerPlateClr
            protected string ExtPClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtModerPlateClr = doorConfig.EXTMODERNPLATECLRID;
                    }
                    return UiLogic.colorDes(_ExtModerPlateClr);
                }
                set
                {
                    _ExtModerPlateClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTMODERNPLATECLRID = _ExtModerPlateClr;
                        doorConfig.borderColors["EXTMODERNPLATECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        <td id="tdExtSepLines" >
            <select name="dlstExtSepLines" @bind="ExtSepLines"
                    disabled="@doorConfig.disabledFlds["EXTSEPLINES"]"
                    class="@doorConfig.borderColors["EXTSEPLINES"]">
                <option></option>
                <option>עם</option>
                <option>ללא</option>
            </select>
        </td>
        @code
        {
            protected string _ExtSepLines = string.Empty;
            protected string ExtSepLines
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtSepLines = doorConfig.EXTSEPLINES;
                    }
                    return _ExtSepLines;
                }
                set
                {
                    _ExtSepLines = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTSEPLINES = _ExtSepLines;
                        doorConfig.borderColors["EXTSEPLINES"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtFinModernSepLine")" *@
        <td id="tdExtFinModernSepLine" >
            <select name="dlstExtFinModernSepLine" @bind="ExtFinModernSepLine"
                    disabled="@doorConfig.disabledFlds["EXTFINMODERNSEPLINE"]"
                    class="@doorConfig.borderColors["EXTFINMODERNSEPLINE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _ExtFinModernSepLine = string.Empty;
            protected string ExtFinModernSepLine
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtFinModernSepLine = doorConfig.EXTFINMODERNSEPLINE;
                    }
                    return _ExtFinModernSepLine;
                }
                set
                {
                    _ExtFinModernSepLine = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNSEPLINE = _ExtFinModernSepLine;
                        doorConfig.borderColors["EXTFINMODERNSEPLINE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtSepLinesClr")" *@
        <td id="tdExtSepLinesClr" >
            @{
                int i405 = Array.IndexOf(UiLogic.propNames, "EXTSEPLINESCLRID");
                @* <select name="dlstExtSepLinesClr" @bind="ExtSepLinesClr" class="@doorConfig.borderColors["EXTSEPLINESCLRID"]" *@
                    <input list="lstExtSepLinesClrs" name="dlstExtSepLinesClr" @bind="ExtSepLinesClrDes" class="@doorConfig.borderColors["EXTSEPLINESCLRID"]"
                           autocomplete="off"
                        disabled="@doorConfig.disabledFlds["EXTSEPLINESCLRID"]"
                        @onfocus="@( () => UiLogic.HasFocus("EXTSEPLINESCLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i405]]"
                   />
                    <datalist id="lstExtSepLinesClrs">
                        @if (PrApiCalls.lstColors != null)
                        {
                            @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                            {
                                <option value="@c.PARTDES">@c.PARTDES</option>
                            }
                        }
                    </datalist>
            }
        </td>
        @code
        {
            protected int _ExtSepLinesClr = 0;
            //protected int ExtSepLinesClr
            protected string ExtSepLinesClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtSepLinesClr = doorConfig.EXTSEPLINESCLRID;
                    }
                    return UiLogic.colorDes(_ExtSepLinesClr);
                }
                set
                {
                    _ExtSepLinesClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTSEPLINESCLRID = _ExtSepLinesClr;
                        doorConfig.borderColors["EXTSEPLINESCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtPerifProfileClr")" *@
        <td id="tdExtPerifProfileClr" >
            @{
                int i407 = Array.IndexOf(UiLogic.propNames, "EXTPERIFPROFILECLRID");
                @* <select name="dlstExtPerifProfileClr" @bind="ExtPerifProfileClr" class="@doorConfig.borderColors["EXTPERIFPROFILECLRID"]" *@
                    <input list="lstExtProfileClrs" name="dlstExtPerifProfileClr" @bind="ExtPerifProfileClrDes" class="@doorConfig.borderColors["EXTPERIFPROFILECLRID"]"
                        autocomplete="off"
                        disabled="@doorConfig.disabledFlds["EXTPERIFPROFILECLRID"]"
                        @onfocus="@( () => UiLogic.HasFocus("EXTPERIFPROFILECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i407]]"
                    />
                    <datalist id="lstExtProfileClrs">
                        @if (PrApiCalls.lstColors != null)
                        {
                            @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                            {
                                <option value="@c.PARTDES">@c.PARTDES</option>
                            }
                        }
                    </datalist>
            }
        </td>
        @code
        {
            protected int _ExtPerifProfileClr = 0;
            //protected int ExtPerifProfileClr
            protected string ExtPerifProfileClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtPerifProfileClr = doorConfig.EXTPERIFPROFILECLRID;
                    }
                    return UiLogic.colorDes(_ExtPerifProfileClr);
                }
                set
                {
                    _ExtPerifProfileClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTPERIFPROFILECLRID = _ExtPerifProfileClr;
                        doorConfig.borderColors["EXTPERIFPROFILECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                    }
                }
            }
        }
        @* hidden="@UiLogic.hideFld(doorConfig, "thExtInsertCoverClr")" *@
        <td id="tdExtInsertCoverClr" >
            @{
                int i417 = Array.IndexOf(UiLogic.propNames, "EXTINSERTCLRID");
                @* <select name="dlstExtInsertCoverClr" @bind="ExtInsertCoverClr" class="@doorConfig.borderColors["EXTINSERTCLRID"]" *@
                    <input list="lstExtInsertClrs" name="dlstExtInsertCoverClr" @bind="ExtInsertClrDes" class="@doorConfig.borderColors["EXTINSERTCLRID"]"
                     autocomplete="off"
                    disabled="@doorConfig.disabledFlds["EXTINSERTCLRID"]"
                        @onfocus="@( () => UiLogic.HasFocus("EXTINSERTCLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i417]]"
                    />
                    <datalist id="lstExtInsertClrs">
                        @if (PrApiCalls.lstColors != null)
                        {
                            @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                            {
                                <option value="@c.PARTDES">@c.PARTDES</option>
                            }
                        }
                    </datalist>
            }
        </td>
        @code
        {
            protected int _ExtInsertCoverClr = 0;
            //protected int ExtInsertCoverClr
            protected string ExtInsertClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtInsertCoverClr = doorConfig.EXTINSERTCLRID;
                    }
                    return UiLogic.colorDes(_ExtInsertCoverClr);
                }
                set
                {
                    _ExtInsertCoverClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTINSERTCLRID = _ExtInsertCoverClr;
                        doorConfig.borderColors["EXTINSERTCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();

                    }
                }
            }
        }
    </tr>
    <tr id="tblDecorL2h">
        <th>לוח מרכזי פנים</th>
        <th>צבע לוח מרכזי פנים</th>
        <th>לוחות חיפוי פנים</th>
        <th>צבע לוחות חיפוי פנים</th>
        <th>פסי הפרדה פנים</th>
        <th>סוגי פסים</th>
        <th>צבע פסי הפרדה פנים</th>
        <th>צבע פרופיל היקפי פנים</th>
        <th>צבע פנים לאינסרט</th>
    </tr>
   
    <tr id="tblDecorL2d">
        @* disabled="@UiLogic.hideFld(doorConfig, "tdIntFinModernCPlate")"  *@
        <td id="tdIntFinModernCPlate">
            <select name="dlstIntFinModernCPlate" @bind="IntFinModernCPlate"
                    disabled="@doorConfig.disabledFlds["INTFINMODERNCPLATE"]"
                    class="@doorConfig.borderColors["INTFINMODERNCPLATE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _IntFinModernCPlate = string.Empty;
            protected string IntFinModernCPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntFinModernCPlate = doorConfig.INTFINMODERNCPLATE;
                    }
                    return _IntFinModernCPlate;
                }
                set
                {
                    _IntFinModernCPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTFINMODERNCPLATE = _IntFinModernCPlate;
                        doorConfig.borderColors["INTFINMODERNCPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* disabled="@UiLogic.hideFld(doorConfig, "tdIntModerCPlateClr")" *@
    <td id="tdIntModerCPlateClr">
        @{
            int i1411 = Array.IndexOf(UiLogic.propNames, "INTMODERNCPLATECLRID");
            @* <select name="dlstIntModerCPlateClr" @bind="IntModernCPlateClr" class="@doorConfig.borderColors["INTMODERNCPLATECLRID"]" *@
            <input list="lstIntCPColors" name="dlstIntModerCPlateClr" @bind="IntCPClrDes" class="@doorConfig.borderColors["INTMODERNCPLATECLRID"]"
                   autocomplete="off"
                   disabled="@doorConfig.disabledFlds["INTMODERNCPLATECLRID"]"
                   @onfocus="@( () => UiLogic.HasFocus("INTMODERNCPLATECLRID", doorConfig) )"
                   @onkeypress="doorConfig.KeyPressHandler"
                   @ref="doorConfig.dicRefs[UiLogic.propNames[i1411]]" 
             />
            <datalist id="lstIntCPColors">
                @if (PrApiCalls.lstColors != null)
                {
                    @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                    {
                        <option value="@c.PARTDES">@c.PARTDES</option>
                    }
                }
                </datalist>
        }
    </td>
        @code
        {
            protected int _IntModernCPlateClr = 0;
            //protected int IntModernCPlateClr
            protected string IntCPClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntModernCPlateClr = doorConfig.INTMODERNCPLATECLRID;
                    }
                    return UiLogic.colorDes(_IntModernCPlateClr);
                }
                set
                {
                    _IntModernCPlateClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTMODERNCPLATECLRID = _IntModernCPlateClr;
                        doorConfig.borderColors["INTMODERNCPLATECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* disabled="@UiLogic.hideFld(doorConfig, "tdIntFinModernPlate")" *@
        <td id="tdIntFinModernPlate" >
            <select name="dlstIntFinModernPlate" @bind="IntFinModernPlate"
                    disabled="@doorConfig.disabledFlds["INTFINMODERNPLATE"]"
                    class="@doorConfig.borderColors["INTFINMODERNPLATE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _IntFinModernPlate = string.Empty;
            protected string IntFinModernPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntFinModernPlate = doorConfig.INTFINMODERNPLATE;
                    }
                    return _IntFinModernPlate;
                }
                set
                {
                    _IntFinModernPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTFINMODERNPLATE = _IntFinModernPlate;
                        doorConfig.borderColors["INTFINMODERNPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @* disabled="@UiLogic.hideFld(doorConfig, "thIntModerPlateClr")" *@
        <td id="tdIntModerPlateClr" >
            @{
                int i1413 = Array.IndexOf(UiLogic.propNames, "INTMODERNPLATECLRID");
                @* <select name="dlstIntModerPlateClr" @bind="IntModerPlateClr" class="@doorConfig.borderColors["INTMODERNPLATECLRID"]" *@
                    <input list="lstIntPColors" name="dlstIntModerPlateClr" @bind="IntPClrDes" class="@doorConfig.borderColors["INTMODERNPLATECLRID"]"
                        autocomplete="off"
                        disabled="@doorConfig.disabledFlds["INTMODERNPLATECLRID"]"
                        @onfocus="@( () => UiLogic.HasFocus("INTMODERNPLATECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i1413]]"
                     />
                    <datalist id="lstIntPColors">
                        @if (PrApiCalls.lstColors != null)
                        {
                            @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                            {
                                <option value="@c.PARTDES">@c.PARTDES</option>
                            }
                        }
                    </datalist>
            }
        </td>
        @code
        {
            protected int _IntModerPlateClr = 0;
            //protected int IntModerPlateClr
            protected string IntPClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntModerPlateClr = doorConfig.INTMODERNPLATECLRID;
                    }
                    return UiLogic.colorDes(_IntModerPlateClr);
                }
                set
                {
                    _IntModerPlateClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTMODERNPLATECLRID = _IntModerPlateClr;
                        doorConfig.borderColors["INTMODERNPLATECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        <td id="tdIntSepLines"  disabled ="true">
            <select name="dlstIntSepLines" @bind="IntSepLines"
                    disabled="@doorConfig.disabledFlds["INTSEPLINES"]"
                    class="@doorConfig.borderColors["INTSEPLINES"]">
                <option></option>
                <option>עם</option>
                <option>ללא</option>
            </select>
        </td>
        @code
        {
            protected string _IntSepLines = string.Empty;
            protected string IntSepLines
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntSepLines = doorConfig.INTSEPLINES;
                    }
                    return _IntSepLines;
                }
                set
                {
                    _IntSepLines = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTSEPLINES = _IntSepLines;
                        doorConfig.borderColors["INTSEPLINES"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* disabled="@UiLogic.hideFld(doorConfig, "tdIntFinModernSepLine")" *@
        <td id="tdIntFinModernSepLine" >
            <select name="dlstIntFinModernSepLine" @bind="IntFinModernSepLine"
                    disabled="@doorConfig.disabledFlds["INTFINMODERNSEPLINE"]"
                    class="@doorConfig.borderColors["INTFINMODERNSEPLINE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _IntFinModernSepLine = string.Empty;
            protected string IntFinModernSepLine
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntFinModernSepLine = doorConfig.INTFINMODERNSEPLINE;
                    }
                    return _IntFinModernSepLine;
                }
                set
                {
                    _IntFinModernSepLine = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTFINMODERNSEPLINE = _IntFinModernSepLine;
                        doorConfig.borderColors["INTFINMODERNSEPLINE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @* disabled="@UiLogic.hideFld(doorConfig, "tdIntSepLinesClr")" *@
        <td id="tdIntSepLinesClr">
            @{
                int i1416 = Array.IndexOf(UiLogic.propNames, "INTSEPLINESCLRID");
                @* <select name="dlstIntSepLinesClr" @bind="IntSepLinesClr" class="@doorConfig.borderColors["INTSEPLINESCLRID"]" *@
                <input list="lstIntSepLinesClrs" name="dlstIntSepLinesClr" @bind="IntSepLinesClrDes" class="@doorConfig.borderColors["INTSEPLINESCLRID"]"
                        autocomplete="off"
                        disabled="@doorConfig.disabledFlds["INTSEPLINESCLRID"]"
                        @onfocus="@( () => UiLogic.HasFocus("INTSEPLINESCLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i1416]]"
                    />
                <datalist id="lstIntSepLinesClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntSepLinesClr = 0;
            //protected int IntSepLinesClr
            protected string IntSepLinesClrDes

            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntSepLinesClr = doorConfig.INTSEPLINESCLRID;
                    }
                    return UiLogic.colorDes(_IntSepLinesClr);
                }
                set
                {
                    _IntSepLinesClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTSEPLINESCLRID = _IntSepLinesClr;
                        doorConfig.borderColors["INTSEPLINESCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @*  disabled="@UiLogic.hideFld(doorConfig, "tdIntPerifProfileClr")*@
        <td id="tdIntPerifProfileClr" >
            @{
                int i1417 = Array.IndexOf(UiLogic.propNames, "INTPERIFPROFILECLRID");
                @* <select name="dlstIntPerifProfileClr" @bind="IntPerifProfileClr" class="@doorConfig.borderColors["INTPERIFPROFILECLRID"]" *@
                <input list="lstIntProfileClrs" name="dlstIntPerifProfileClr" @bind="IntPerifProfileClrDes" class="@doorConfig.borderColors["INTPERIFPROFILECLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["INTPERIFPROFILECLRID"]"
                        @onfocus="@( () => UiLogic.HasFocus("INTPERIFPROFILECLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i1417]]"
                />
                <datalist id="lstIntProfileClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntPerifProfileClr = 0;
            //protected int IntPerifProfileClr
            protected string IntPerifProfileClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntPerifProfileClr = doorConfig.INTPERIFPROFILECLRID;
                    }
                    return UiLogic.colorDes(_IntPerifProfileClr);
                }
                set
                {
                    _IntPerifProfileClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTPERIFPROFILECLRID = _IntPerifProfileClr;
                        doorConfig.borderColors["INTPERIFPROFILECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "decor");
                    }
                }
            }
        }
        @* disabled="@UiLogic.hideFld(doorConfig, "thIntInsertCoverClr")" *@
        <td id="tdIntInsertCoverClr" >
            @{
                int i1418 = Array.IndexOf(UiLogic.propNames, "INTINSERTCLRID");
                @* <select name="dlstIntInsertCoverClr" @bind="IntInsertCoverClr" class="@doorConfig.borderColors["INTINSERTCLRID"]" *@
                <input list="lstIntInsertClrs" name="dlstIntInsertCoverClr" @bind="IntInsertClrDes" class="@doorConfig.borderColors["INTINSERTCLRID"]"
                        autocomplete="off"
                        disabled="@doorConfig.disabledFlds["INTINSERTCLRID"]"
                        @onfocus="@( () => UiLogic.HasFocus("INTINSERTCLRID", doorConfig) )"
                        @onkeypress="doorConfig.KeyPressHandler"
                        @ref="doorConfig.dicRefs[UiLogic.propNames[i1418]]"
                 />
                <datalist id="lstIntInsertClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntInsertCoverClr = 0;
            //protected int IntInsertCoverClr
            protected string IntInsertClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntInsertCoverClr = doorConfig.INTINSERTCLRID;
                    }
                    return UiLogic.colorDes(_IntInsertCoverClr);
                }
                set
                {
                    _IntInsertCoverClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTINSERTCLRID = _IntInsertCoverClr;
                        doorConfig.borderColors["INTINSERTCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
    </tr>
</table>


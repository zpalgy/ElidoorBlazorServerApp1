@page "/Decor"

@using BlazorServerApp1.Pages
@using BlazorServerApp1.Data
@using System.Data;

@inject IJSRuntime Js

@inject NavigationManager Navigator



@code
{
    [Parameter]
    public DoorConfig doorConfig { get; set; }

    [Parameter]
    public Configurator4 config4 { get; set; }

    protected bool openMsgBox = false;
    private bool openYesNo = false;
    string errMsg2 = string.Empty;
    string errMsg3 = "xxxxxxxxxxxxxxxxxx";
    private string msgCaption = "שגיאה";
    string msgClass = "modal-body centeredMsg";
    private string MsgTitleCssClass = string.Empty;
    string msgHeaderClass = "modal-header";
    string msgBorder1Style = string.Empty;

    private string ErrMsgCssClass = "modal-body centeredMsg"; //"modal-body";  // "modal-body centeredMsg"
    string YNissue = string.Empty;
    private bool ansYes = false;


    string NoColor = "מגולוון";

    protected override async Task OnInitializedAsync()
    {
        string errMsg = string.Empty;
        doorConfig.currTabName = "movingwing";    //TODO : for getting nextTab we may want to use "movingwing" .
                                                  // check whether we should use "decor" which is the right name

        doorConfig.dtTabFlds = UiLogic.getTabFields("decor", doorConfig, ref errMsg);
        doorConfig.lstTabFlds = UiLogic.getLstTabFields("decor", doorConfig, ref errMsg);
        // config4.RefreshState();  //just for a test - works !

        // clear disabled fields :
        doorConfig.EXTFINMODERNCPLATE = (doorConfig.DECORFORMAT == HebNouns.Internal ? string.Empty : doorConfig.EXTFINMODERNCPLATE);
        doorConfig.EXTFINMODERNPLATE = (doorConfig.DECORFORMAT == HebNouns.Internal ? string.Empty : doorConfig.EXTFINMODERNPLATE);
        doorConfig.EXTFINMODERNSEPLINE = (doorConfig.DECORFORMAT == HebNouns.Internal ? string.Empty : doorConfig.EXTFINMODERNSEPLINE);

        doorConfig.INTFINMODERNCPLATE = (doorConfig.DECORFORMAT == HebNouns.External ? string.Empty : doorConfig.INTFINMODERNCPLATE);
        doorConfig.INTFINMODERNPLATE = (doorConfig.DECORFORMAT == HebNouns.External ? string.Empty : doorConfig.INTFINMODERNPLATE);
        doorConfig.INTFINMODERNSEPLINE = (doorConfig.DECORFORMAT == HebNouns.External ? string.Empty : doorConfig.INTFINMODERNSEPLINE);

        setDisabled();
        applySepLines();

    }
    void setDisabled()  // used in UiLogic.doorFldIsFilled(...)
    {
        doorConfig.disabledFlds["EXTFINMODERNCPLATE"] =
        doorConfig.disabledFlds["EXTCGRIDPLATECLRID"] =
        doorConfig.disabledFlds["EXTFINMODERNPLATE"] =
        doorConfig.disabledFlds["EXTMODERNPLATECLRID"] =
        doorConfig.disabledFlds["EXTSEPLINES"] =
        doorConfig.disabledFlds["EXTFINMODERNSEPLINE"] =
        doorConfig.disabledFlds["EXTSEPLINESCLRID"] =
        doorConfig.disabledFlds["EXTPERIFPROFILECLRID"] =
        doorConfig.disabledFlds["EXTINSERTCLRID"] = (doorConfig.DECORFORMAT == HebNouns.Internal);

        doorConfig.disabledFlds["INTFINMODERNCPLATE"] =
        doorConfig.disabledFlds["INTCGRIDPLATECLRID"] =
        doorConfig.disabledFlds["INTFINMODERNPLATE"] =
        doorConfig.disabledFlds["INTMODERNPLATECLRID"] =
        doorConfig.disabledFlds["INTSEPLINES"] =
        doorConfig.disabledFlds["INTFINMODERNSEPLINE"] =
        doorConfig.disabledFlds["INTSEPLINESCLRID"] =
        doorConfig.disabledFlds["INTPERIFPROFILECLRID"] =
        doorConfig.disabledFlds["INTINSERTCLRID"] = (doorConfig.DECORFORMAT == HebNouns.External);

        foreach (ConfField_Class fld in doorConfig.lstTabFlds)
        {
            doorConfig.thClasses[fld.FIELDNAME] = (doorConfig.disabledFlds[fld.FIELDNAME] ? "thGray" : "thBlue");
        }
    }
    void applySepLines()
    {
        if (!doorConfig.disabledFlds["EXTSEPLINES"])
        {
            if (doorConfig.EXTSEPLINES == HebNouns.None)
            {
                doorConfig.EXTFINMODERNSEPLINE = string.Empty;
                doorConfig.EXTSEPLINESCLRID = 0;
            }
            doorConfig.disabledFlds["EXTFINMODERNSEPLINE"] = doorConfig.disabledFlds["EXTSEPLINESCLRID"] = (doorConfig.EXTSEPLINES == HebNouns.None);
        }
        else if (!doorConfig.disabledFlds["INTSEPLINES"])
        {
            if (doorConfig.INTSEPLINES == HebNouns.None)
            {
                doorConfig.INTFINMODERNSEPLINE = string.Empty;
                doorConfig.INTSEPLINESCLRID = 0;
            }
            doorConfig.disabledFlds["INTFINMODERNSEPLINE"] = doorConfig.disabledFlds["INTSEPLINESCLRID"] = (doorConfig.INTSEPLINES == HebNouns.None);
        }
    }
}



<br />
<table>
    <tr>
        <td>
            <div class="tabPageTitle">
                <h1 class="rightLeftMargin">עיצוב</h1>
            </div>
        </td>
    </tr>
</table>
<table id="tblDecor1">
    <tr id="tblDecorExtL1h">
        <th class="@doorConfig.thClasses["EXTFINMODERNCPLATE"]" style="white-space: pre;">לוח     מרכזי      חוץ</th>
        @*     צבע רקע לסורג צד חוץ   *@

        @* D-850 EXTFINMODERNCPLATE *@
        <th class="@doorConfig.thClasses["EXTGRIDCPLATEDES"]">דגם סורג מרכזי חוץ</th>  @*  D-760 EXTGRIDCPLATEDES *@
        <th class="@doorConfig.thClasses["EXTCGRIDBKGDCLRID"]">צבע רקע לסורג מרכזי חוץ</th>    @* D-260 EXTCGRIDBKGDCLRID *@
        <th class="@doorConfig.thClasses["EXTCGRIDPLATECLRID"]">צבע לוח\סורג מרכזי חוץ</th>  @*  D-250 *@
        <th class="@doorConfig.thClasses["EXTFINMODERNPLATE"]">חיפוי חוץ</th>    @* D-1000 EXTFINMODERNPLATE *@
        <th class="@doorConfig.thClasses["EXTMODERNPLATECLRID"]">צבע חיפוי חוץ</th>
        <th class="@doorConfig.thClasses["EXTSIDEGRID"]">דגם סורג צד חוץ</th>       @*  new 21/04/2023 *@
        <th class="@doorConfig.thClasses["EXTSIDEGRIDCLRID"]">צבע סורג צד חוץ</th>  @*  new 21/04/2023 *@
    </tr>
    <tr id="tblDecorExtL1d">
        @*  hidden="@UiLogic.hideFld(doorConfig, "tdExtFinModernCPlate")   לוח מרכזי חוץ (1) *@
        <td id="tdExtFinModernCPlate">
            <select name="dlstExtFinModernCPlate" @bind="ExtFinModernCPlate"
                    disabled="@doorConfig.disabledFlds["EXTFINMODERNCPLATE"]"
                    class="@doorConfig.borderColors["EXTFINMODERNCPLATE"]">
                @if (PrApiCalls.lstRaw4CPlates != null)
                {
                    @foreach (RAW4CPLATES_Class c in PrApiCalls.lstRaw4CPlates)
                    {
                        if (!UiLogic.disableOption3(doorConfig, "EXTFINMODERNCPLATE", c.RAW4CPLATESNAME))
                        {
                            <option value="@c.RAW4CPLATESNAME">@c.RAW4CPLATESNAME</option>
                        }
                    }
                }
                @*
                    <option></option>
                    <option>חלק</option>
                    <option>מחורץ</option>
                *@
            </select>
        </td>
        @code
        {
            protected string _ExtFinModernCPlate = string.Empty;
            protected string ExtFinModernCPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtFinModernCPlate = doorConfig.EXTFINMODERNCPLATE;
                    }
                    return _ExtFinModernCPlate;
                }
                set
                {
                    _ExtFinModernCPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNCPLATE = _ExtFinModernCPlate;
                        doorConfig.borderColors["EXTFINMODERNCPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* (דגם סורג מרכזי חוץ (2 *@
        <td id="tdExtGridCPlateDes">
            <select name="dlstExtGridCPlateDes" @bind="ExtGridCPlateDes"
                    disabled="@doorConfig.disabledFlds["EXTGRIDCPLATEDES"]"
                    class="@doorConfig.borderColors["EXTGRIDCPLATEDES"]">
                @if (PrApiCalls.lstRaw4CPlates != null)
                {
                    @foreach (GRID_Class c in PrApiCalls.lstGrids)
                    {
                        <option value="@c.GRIDDES">@c.GRIDDES</option>
                    }
                }
            </select>
        </td>
        @code
        {
            protected string _ExtGridCPlateDes = string.Empty;
            protected string ExtGridCPlateDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtGridCPlateDes = doorConfig.EXTGRIDCPLATEDES;
                    }
                    return _ExtGridCPlateDes;
                }
                set
                {
                    _ExtGridCPlateDes = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTGRIDCPLATEDES = _ExtGridCPlateDes;
                        doorConfig.borderColors["EXTGRIDCPLATEDES"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* צבע רקע לסורג מרכזי חוץ (3) י *@
        <td id="tdExtCGridBkgdClr">
            @{
                int i408 = Array.IndexOf(UiLogic.propNames, "EXTCGRIDBKGDCLRID");
                @* <select name="dlstExtModerCPlateClr" @bind="ExtModerCPlateClr" class="@doorConfig.borderColors["EXTCGRIDPLATECLRID"]" *@

                <input list="lstExtCGBkColors" name="dlstExtCGridBkgdClr" @bind="ExtCGridBkgdClrDes" class="@doorConfig.borderColors["EXTCGRIDBKGDCLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["EXTCGRIDBKGDCLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("EXTCGRIDBKGDCLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i408]]" />
                <datalist id="lstExtCGBkColors">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtCGridBkgdClr = 0;
            //protected int ExtModerCPlateClr
            protected string ExtCGridBkgdClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtCGridBkgdClr = doorConfig.EXTCGRIDBKGDCLRID;
                    }
                    return UiLogic.colorDes(_ExtCGridBkgdClr);
                }
                set
                {
                    _ExtCGridBkgdClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTCGRIDBKGDCLRID = _ExtCGridBkgdClr;
                        doorConfig.borderColors["EXTCGRIDBKGDCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtModerCPlateClr")"       צבע לוח\סורג מרכזי חוץ (4) י  *@
        <td id="tdExtCGridPlateClr">
            @{
                int i409 = Array.IndexOf(UiLogic.propNames, "EXTCGRIDPLATECLRID");
                @* <select name="dlstExtModerCPlateClr" @bind="ExtModerCPlateClr" class="@doorConfig.borderColors["EXTCGRIDPLATECLRID"]" *@

                <input list="lstExtCGrdPColors" name="dlstExtCgridPlateClr" @bind="ExtCGridPlateClrDes" class="@doorConfig.borderColors["EXTCGRIDPLATECLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["EXTCGRIDPLATECLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("EXTCGRIDPLATECLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i409]]" />
                <datalist id="lstExtCGrdPColors">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtCGridPlateClr = 0;
            //protected int ExtModerCPlateClr
            protected string ExtCGridPlateClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtCGridPlateClr = doorConfig.EXTCGRIDPLATECLRID;
                    }
                    return UiLogic.colorDes(_ExtCGridPlateClr);
                }
                set
                {
                    _ExtCGridPlateClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTCGRIDPLATECLRID = _ExtCGridPlateClr;
                        doorConfig.borderColors["EXTCGRIDPLATECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtFinModernPlate")"  (5) חיפוי חוץ *@
        <td id="tdExtFinModernPlate">
            <select name="dlstExtFinModernPlate" @bind="ExtFinModernPlate"
                    disabled="@doorConfig.disabledFlds["EXTFINMODERNPLATE"]"
                    class="@doorConfig.borderColors["EXTFINMODERNPLATE"]">
                @if (PrApiCalls.lstRaw4CPlates != null)
                {
                    @foreach (RAW4CPLATES_Class c in PrApiCalls.lstRaw4CPlates)
                    {
                        if (!UiLogic.disableOption3(doorConfig, "EXTFINMODERNPLATE", c.RAW4CPLATESNAME))
                        {
                            <option value="@c.RAW4CPLATESNAME">@c.RAW4CPLATESNAME</option>
                        }
                    }
                }
                @*
                    <option></option>
                    <option>חלק</option>
                    <option>מחורץ</option>
                *@
            </select>
        </td>
        @code
        {
            protected string _ExtFinModernPlate = string.Empty;
            protected string ExtFinModernPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtFinModernPlate = doorConfig.EXTFINMODERNPLATE;
                    }
                    return _ExtFinModernPlate;
                }
                set
                {
                    _ExtFinModernPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNPLATE = _ExtFinModernPlate;
                        doorConfig.borderColors["EXTFINMODERNPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "thExtModerPlateClr")"   צבע חיפוי חוץ (6) י  *@
        <td id="tdExtModerPlateClr">
            @{
                int i413 = Array.IndexOf(UiLogic.propNames, "EXTMODERNPLATECLRID");
                @* <select name="dlstExtModerPlateClr" @bind="ExtModerPlateClr" class="@doorConfig.borderColors["EXTMODERNPLATECLRID"]" *@
                <input list="lstExtPColors" name="dlstExtModerPlateClr" @bind="ExtPClrDes" class="@doorConfig.borderColors["EXTMODERNPLATECLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["EXTMODERNPLATECLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("EXTMODERNPLATECLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i413]]" />
                <datalist id="lstExtPColors">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtModerPlateClr = 0;
            //protected int ExtModerPlateClr
            protected string ExtPClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtModerPlateClr = doorConfig.EXTMODERNPLATECLRID;
                    }
                    return UiLogic.colorDes(_ExtModerPlateClr);
                }
                set
                {
                    _ExtModerPlateClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTMODERNPLATECLRID = _ExtModerPlateClr;
                        doorConfig.borderColors["EXTMODERNPLATECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @*
            <th class="@doorConfig.thClasses["EXTSIDEGRID"]">  (7)  דגם סורג צד חוץ</th>
                [TODO] add logic : MODERN, מעצבים - field disabled and empty.
                                   DIAMOND : add HebNouns.None ... wait for Eli's answer to my question
                                   Hi-Tec : add HebNouns.None and use PrApiCalls.lstGrids
        *@
        <td id="tdExtSideGrid">
            <select name="dlstSideGrid" @bind="ExtSideGrid"
                    disabled="@doorConfig.disabledFlds["EXTSIDEGRID"]"
                    class="@doorConfig.borderColors["EXTSIDEGRID"]">
                @if (PrApiCalls.lstRaw4CPlates != null)
                {
                    @foreach (GRID_Class c in PrApiCalls.lstGrids)
                    {
                        if (!UiLogic.disableOption3(doorConfig, "EXTSIDEGRID", c.GRIDNAME))
                        {
                            <option value="@c.GRIDNAME">@c.GRIDNAME</option>
                        }
                    }
                }
            </select>
        </td>
        @code
        {
            protected string _ExtSideGrid = string.Empty;
            protected string ExtSideGrid
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtSideGrid = doorConfig.EXTSIDEGRID;
                    }
                    return _ExtSideGrid;
                }
                set
                {
                    _ExtSideGrid = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTSIDEGRID = _ExtSideGrid;
                        doorConfig.borderColors["EXTSIDEGRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @*
            <th class="@doorConfig.thClasses["EXTSIDEGRIDCLRID"]">  (8)  צבע סורג צד חוץ</th>
        *@
        <td id="tdExtSideGridClr">
            @{
                int i416 = Array.IndexOf(UiLogic.propNames, "EXTSIDEGRIDCLRID");
                <input list="lstExtSideGridClrs" name="dlstExtSideGrdidClr" @bind="ExtSideGridClrDes" class="@doorConfig.borderColors["EXTSIDEGRIDCLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["EXTSIDEGRIDCLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("EXTSIDEGRIDCLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i416]]" />
                <datalist id="lstExtSideGridClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtSideGridClrDes = 0;
            //protected int ExtModerPlateClr
            protected string ExtSideGridClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtSideGridClrDes = doorConfig.EXTSIDEGRIDCLRID;
                    }
                    return UiLogic.colorDes(_ExtSideGridClrDes);
                }
                set
                {
                    _ExtSideGridClrDes = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTSIDEGRIDCLRID = _ExtSideGridClrDes;
                        doorConfig.borderColors["EXTSIDEGRIDCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }



    </tr>
    @* end of tblDecorExtL1d *@

    <tr id="tblDecorExtL2h">
        <th class="@doorConfig.thClasses["EXTSIDEGRIDBKGDCLRID"]">צבע רקע לסורג צד חוץ</th>  @*  new 26/04/2023 *@
        <th class="@doorConfig.thClasses["EXTSEPLINES"]">פסי הפרדה חוץ</th>
        <th class="@doorConfig.thClasses["EXTFINMODERNSEPLINE"]">סוג פסי הפרדה חוץ</th>
        <th class="@doorConfig.thClasses["EXTSEPLINESCLRID"]">צבע פסי הפרדה חוץ</th>
        <th class="@doorConfig.thClasses["EXTPERIFPROFILETYPE"]">סוג פרופיל היקפי חוץ</th>  @* new (13) 4mm | 8mm *@
        <th class="@doorConfig.thClasses["EXTPERIFPROFILECLRID"]">צבע פרופיל היקפי חוץ</th>
        <th class="@doorConfig.thClasses["EXTINSERTCLRID"]">צבע חוץ לאינסרט</th>
    </tr>

    <tr id="tblDecorExtL2d">
        @*
            EXTSIDEGRIDBKGDCLRID   (9) צבע רקע לסורג צד חוץ   new 26/04/2023
        *@
        <td id="tdExtSideGridClr">
            @{
                int i417 = Array.IndexOf(UiLogic.propNames, "EXTSIDEGRIDBKGDCLRID");
                <input list="lstExtSideGridClrs" name="dlstExtSideGrdidClr" @bind="ExtSideGridBkgdClrDes" class="@doorConfig.borderColors["EXTSIDEGRIDBKGDCLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["EXTSIDEGRIDBKGDCLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("EXTSIDEGRIDBKGDCLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i417]]" />
                <datalist id="lstExtSideGridClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtSideGridBkgdClrDes = 0;
            //protected int ExtModerPlateClr
            protected string ExtSideGridBkgdClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtSideGridClrDes = doorConfig.EXTSIDEGRIDBKGDCLRID;
                    }
                    return UiLogic.colorDes(_ExtSideGridBkgdClrDes);
                }
                set
                {
                    _ExtSideGridBkgdClrDes = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTSIDEGRIDBKGDCLRID = _ExtSideGridBkgdClrDes;
                        doorConfig.borderColors["EXTSIDEGRIDBKGDCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }



        @*  *@
        <td id="tdExtSepLines">
            <select name="dlstExtSepLines" @bind="ExtSepLines"
                    disabled="@doorConfig.disabledFlds["EXTSEPLINES"]"
                    class="@doorConfig.borderColors["EXTSEPLINES"]">
                <option></option>
                <option>@HebNouns.With</option>
                <option>@HebNouns.None</option>
            </select>
        </td>
        @code
        {
            protected string _ExtSepLines = string.Empty;
            protected string ExtSepLines
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtSepLines = doorConfig.EXTSEPLINES;
                    }
                    return _ExtSepLines;
                }
                set
                {
                    _ExtSepLines = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTSEPLINES = _ExtSepLines;
                        doorConfig.borderColors["EXTSEPLINES"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        applySepLines();
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtFinModernSepLine")" *@
        <td id="tdExtFinModernSepLine">
            <select name="dlstExtFinModernSepLine" @bind="ExtFinModernSepLine"
                    disabled="@doorConfig.disabledFlds["EXTFINMODERNSEPLINE"]"
                    class="@doorConfig.borderColors["EXTFINMODERNSEPLINE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _ExtFinModernSepLine = string.Empty;
            protected string ExtFinModernSepLine
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtFinModernSepLine = doorConfig.EXTFINMODERNSEPLINE;
                    }
                    return _ExtFinModernSepLine;
                }
                set
                {
                    _ExtFinModernSepLine = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNSEPLINE = _ExtFinModernSepLine;
                        doorConfig.borderColors["EXTFINMODERNSEPLINE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtSepLinesClr")" *@
        <td id="tdExtSepLinesClr">
            @{
                int i405 = Array.IndexOf(UiLogic.propNames, "EXTSEPLINESCLRID");
                @* <select name="dlstExtSepLinesClr" @bind="ExtSepLinesClr" class="@doorConfig.borderColors["EXTSEPLINESCLRID"]" *@
                <input list="lstExtSepLinesClrs" name="dlstExtSepLinesClr" @bind="ExtSepLinesClrDes" class="@doorConfig.borderColors["EXTSEPLINESCLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["EXTSEPLINESCLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("EXTSEPLINESCLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i405]]" />
                <datalist id="lstExtSepLinesClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtSepLinesClr = 0;
            //protected int ExtSepLinesClr
            protected string ExtSepLinesClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtSepLinesClr = doorConfig.EXTSEPLINESCLRID;
                    }
                    return UiLogic.colorDes(_ExtSepLinesClr);
                }
                set
                {
                    _ExtSepLinesClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTSEPLINESCLRID = _ExtSepLinesClr;
                        doorConfig.borderColors["EXTSEPLINESCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @*  (13)  סוג פרופיל היקפי חוץ *@
        <td id="tdExtPerifProfileType">
            <select name="dlstExtPerifProfileType" @bind="ExtPerifProfileType"
                    disabled="@doorConfig.disabledFlds["EXTPERIFPROFILETYPE"]"
                    class="@doorConfig.borderColors["EXTPERIFPROFILETYPE"]">
                <option></option>
                <option>8mm</option>
                <option>4mm</option>
            </select>
        </td>
        @code
        {
            protected string _ExtPerifProfileType = string.Empty;
            protected string ExtPerifProfileType
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtPerifProfileType = doorConfig.EXTPERIFPROFILETYPE;
                    }
                    return _ExtPerifProfileType;
                }
                set
                {
                    _ExtPerifProfileType = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTFINMODERNSEPLINE = _ExtFinModernSepLine;
                        doorConfig.borderColors["EXTPERIFPROFILETYPE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }



        @* hidden="@UiLogic.hideFld(doorConfig, "tdExtPerifProfileClr")" *@
        <td id="tdExtPerifProfileClr">
            @{
                int i407 = Array.IndexOf(UiLogic.propNames, "EXTPERIFPROFILECLRID");
                @* <select name="dlstExtPerifProfileClr" @bind="ExtPerifProfileClr" class="@doorConfig.borderColors["EXTPERIFPROFILECLRID"]" *@
                <input list="lstExtProfileClrs" name="dlstExtPerifProfileClr" @bind="ExtPerifProfileClrDes" class="@doorConfig.borderColors["EXTPERIFPROFILECLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["EXTPERIFPROFILECLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("EXTPERIFPROFILECLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i407]]" />
                <datalist id="lstExtProfileClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtPerifProfileClr = 0;
            //protected int ExtPerifProfileClr
            protected string ExtPerifProfileClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtPerifProfileClr = doorConfig.EXTPERIFPROFILECLRID;
                    }
                    return UiLogic.colorDes(_ExtPerifProfileClr);
                }
                set
                {
                    _ExtPerifProfileClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTPERIFPROFILECLRID = _ExtPerifProfileClr;
                        doorConfig.borderColors["EXTPERIFPROFILECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                    }
                }
            }
        }
        @* hidden="@UiLogic.hideFld(doorConfig, "thExtInsertCoverClr")" *@
        <td id="tdExtInsertCoverClr">
            @{
                int i418 = Array.IndexOf(UiLogic.propNames, "EXTINSERTCLRID");
                @* <select name="dlstExtInsertCoverClr" @bind="ExtInsertCoverClr" class="@doorConfig.borderColors["EXTINSERTCLRID"]" *@
                <input list="lstExtInsertClrs" name="dlstExtInsertCoverClr" @bind="ExtInsertClrDes" class="@doorConfig.borderColors["EXTINSERTCLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["EXTINSERTCLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("EXTINSERTCLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i418]]" />
                <datalist id="lstExtInsertClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _ExtInsertCoverClr = 0;
            //protected int ExtInsertCoverClr
            protected string ExtInsertClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _ExtInsertCoverClr = doorConfig.EXTINSERTCLRID;
                    }
                    return UiLogic.colorDes(_ExtInsertCoverClr);
                }
                set
                {
                    _ExtInsertCoverClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.EXTINSERTCLRID = _ExtInsertCoverClr;
                        doorConfig.borderColors["EXTINSERTCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();

                    }
                }
            }
        }
    </tr>
    @*  end of tblDecorExtL2d *@

    <tr style="outline: dashed"></tr>   @*  inter-section line separator  *@

    <tr id="tblDecorIntL1h">
        <th class="@doorConfig.thClasses["INTFINMODERNCPLATE"]">לוח מרכזי פנים</th>
        <th class="@doorConfig.thClasses["INTGRIDCPLATEDES"]">דגם סורג מרכזי פנים</th>
        <th class="@doorConfig.thClasses["EXTCGRIDBKGDCLRID"]">צבע רקע לסורג מרכזי פנים</th>    @* INTCGRIDBKGDCLRID *@
        <th class="@doorConfig.thClasses["INTCGRIDPLATECLRID"]">צבע לוח\סורג מרכזי פנים</th>  @*  D- *@
        <th class="@doorConfig.thClasses["INTFINMODERNPLATE"]"> חיפוי פנים</th>
        <th class="@doorConfig.thClasses["INTMODERNPLATECLRID"]">צבע חיפוי פנים</th>
        <th class="@doorConfig.thClasses["INTSIDEGRID"]">דגם סורג צד פנים</th>       @*  new 21/04/2023 *@
        <th class="@doorConfig.thClasses["INTSIDEGRIDCLRID"]">צבע סורג צד פנים</th>  @*  new 21/04/2023 *@
    </tr>
    <tr id="tblDecorIntL1d">
        @* disabled="@UiLogic.hideFld(doorConfig, "tdIntFinModernCPlate")"  (1)   לוח מרכזי פנים*@
        @{ doorConfig.disabledFlds["INTFINMODERNCPLATE"] = false; }  @* debug  *@
        <td id="tdIntFinModernCPlate">
            <select name="dlstIntFinModernCPlate" @bind="IntFinModernCPlate"
                    disabled="@doorConfig.disabledFlds["INTFINMODERNCPLATE"]"
                    class="@doorConfig.borderColors["INTFINMODERNCPLATE"]">
                @if (PrApiCalls.lstRaw4CPlates != null)
                {
                    @foreach (RAW4CPLATES_Class c in PrApiCalls.lstRaw4CPlates)
                    {
                        if (!UiLogic.disableOption3(doorConfig, "INTFINMODERNCPLATE", c.RAW4CPLATESNAME))
                        {
                            <option value="@c.RAW4CPLATESNAME">@c.RAW4CPLATESNAME</option>
                        }
                    }
                }
                @*
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
                *@
            </select>
        </td>
        @code
        {
            protected string _IntFinModernCPlate = string.Empty;
            protected string IntFinModernCPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntFinModernCPlate = doorConfig.INTFINMODERNCPLATE;
                    }
                    return _IntFinModernCPlate;
                }
                set
                {
                    _IntFinModernCPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTFINMODERNCPLATE = _IntFinModernCPlate;
                        doorConfig.borderColors["INTFINMODERNCPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* (דגם סורג מרכזי פנים (2 *@
        <td id="tdIntGridCPlateDes">
            <select name="dlstIntGridCPlateDes" @bind="IntGridCPlateDes"
                    disabled="@doorConfig.disabledFlds["INTGRIDCPLATEDES"]"
                    class="@doorConfig.borderColors["INTGRIDCPLATEDES"]">
                @if (PrApiCalls.lstRaw4CPlates != null)
                {
                    @foreach (GRID_Class c in PrApiCalls.lstGrids)
                    {
                        <option value="@c.GRIDDES">@c.GRIDDES</option>
                    }
                }
            </select>
        </td>
        @code
        {
            protected string _IntGridCPlateDes = string.Empty;
            protected string IntGridCPlateDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntGridCPlateDes = doorConfig.INTGRIDCPLATEDES;
                    }
                    return _IntGridCPlateDes;
                }
                set
                {
                    _IntGridCPlateDes = value;
                    if (doorConfig != null)
                    {
                        doorConfig.EXTGRIDCPLATEDES = _IntGridCPlateDes;
                        doorConfig.borderColors["INTGRIDCPLATEDES"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* צבע רקע לסורג מרכזי פנים (3) י *@
        <td id="tdIntCGridBkgdClr">
            @{
                int i419 = Array.IndexOf(UiLogic.propNames, "INTCGRIDBKGDCLRID");
                @* <select name="dlstExtModerCPlateClr" @bind="ExtModerCPlateClr" class="@doorConfig.borderColors["EXTCGRIDPLATECLRID"]" *@

                <input list="lstIntCGBkColors" name="dlstIntCGridBkgdClr" @bind="IntCGridBkgdClrDes" class="@doorConfig.borderColors["INTCGRIDBKGDCLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["INTCGRIDBKGDCLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("INTCGRIDBKGDCLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i408]]" />
                <datalist id="lstIntCGBkColors">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntCGridBkgdClr = 0;
            //protected int ExtModerCPlateClr
            protected string IntCGridBkgdClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntCGridBkgdClr = doorConfig.INTCGRIDBKGDCLRID;
                    }
                    return UiLogic.colorDes(_IntCGridBkgdClr);
                }
                set
                {
                    _IntCGridBkgdClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTCGRIDBKGDCLRID = _ExtCGridBkgdClr;
                        doorConfig.borderColors["INTCGRIDBKGDCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }


        @* (4)  צבע לוח/סורג מרכזי פנים *@
        <td id="tdIntCGridPlateClr">
            @{
                doorConfig.disabledFlds["INTCGRIDPLATECLRID"] = false;  //debug
                int i1411 = Array.IndexOf(UiLogic.propNames, "INTCGRIDPLATECLRID");
                @* <select name="dlstIntModerCPlateClr" @bind="IntModernCPlateClr" class="@doorConfig.borderColors["INTCGRIDPLATECLRID"]" *@
                <input list="lstIntCGridPlateColors" name="dlstIntCGridPlateClr" @bind="IntCGridPlateClrDes" class="@doorConfig.borderColors["INTCGRIDPLATECLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["INTCGRIDPLATECLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("INTCGRIDPLATECLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i1411]]" />
                <datalist id="lstIntCGridPlateColors">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntCGridPlateClr = 0;
            //protected int IntModernCPlateClr
            protected string IntCGridPlateClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntCGridPlateClr = doorConfig.INTCGRIDPLATECLRID;
                    }
                    return UiLogic.colorDes(_IntCGridPlateClr);
                }
                set
                {
                    _IntCGridPlateClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTCGRIDPLATECLRID = _IntCGridPlateClr;
                        doorConfig.borderColors["INTCGRIDPLATECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* חיפוי פנים (5) י *@
        <td id="tdIntFinModernPlate">
            @{ doorConfig.disabledFlds["INTFINMODERNPLATE"] = false; }  @* debug *@
            <select name="dlstIntFinModernPlate" @bind="IntFinModernPlate"
                    disabled="@doorConfig.disabledFlds["INTFINMODERNPLATE"]"
                    class="@doorConfig.borderColors["INTFINMODERNPLATE"]">
                @if (PrApiCalls.lstRaw4CPlates != null)
                {
                    @foreach (RAW4CPLATES_Class c in PrApiCalls.lstRaw4CPlates)
                    {
                        if (!UiLogic.disableOption3(doorConfig, "INTFINMODERNPLATE", c.RAW4CPLATESNAME))
                        {
                            <option value="@c.RAW4CPLATESNAME">@c.RAW4CPLATESNAME</option>
                        }
                    }
                }
                @*
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
                *@
            </select>
        </td>
        @code
        {
            protected string _IntFinModernPlate = string.Empty;
            protected string IntFinModernPlate
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntFinModernPlate = doorConfig.INTFINMODERNPLATE;
                    }
                    return _IntFinModernPlate;
                }
                set
                {
                    _IntFinModernPlate = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTFINMODERNPLATE = _IntFinModernPlate;
                        doorConfig.borderColors["INTFINMODERNPLATE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @* disabled="@UiLogic.hideFld(doorConfig, "thIntModerPlateClr")"   (6)  צבע חיפוי פנים  *@
        <td id="tdIntModerPlateClr">
            @{
                int i1413 = Array.IndexOf(UiLogic.propNames, "INTMODERNPLATECLRID");
                doorConfig.disabledFlds["INTMODERNPLATECLRID"] = false;  //debug
                @* <select name="dlstIntModerPlateClr" @bind="IntModerPlateClr" class="@doorConfig.borderColors["INTMODERNPLATECLRID"]" *@
                <input list="lstIntPColors" name="dlstIntModerPlateClr" @bind="IntPClrDes" class="@doorConfig.borderColors["INTMODERNPLATECLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["INTMODERNPLATECLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("INTMODERNPLATECLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i1413]]" />
                <datalist id="lstIntPColors">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntModerPlateClr = 0;
            //protected int IntModerPlateClr
            protected string IntPClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntModerPlateClr = doorConfig.INTMODERNPLATECLRID;
                    }
                    return UiLogic.colorDes(_IntModerPlateClr);
                }
                set
                {
                    _IntModerPlateClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTMODERNPLATECLRID = _IntModerPlateClr;
                        doorConfig.borderColors["INTMODERNPLATECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* 7 INTSIDEGRIDTYPE  דגם סורג צד פנים *@
        <td id="tdIntSideGrid">
            <select name="dlstIntSideGrid" @bind="IntSideGrid"
                    disabled="@doorConfig.disabledFlds["INTSIDEGRID"]"
                    class="@doorConfig.borderColors["INTSIDEGRID"]">
                @if (PrApiCalls.lstRaw4CPlates != null)
                {
                    @foreach (GRID_Class c in PrApiCalls.lstGrids)
                    {
                        if (!UiLogic.disableOption3(doorConfig, "INTSIDEGRID", c.GRIDNAME))
                        {
                            <option value="@c.GRIDNAME">@c.GRIDNAME</option>
                        }
                    }
                }
            </select>
        </td>
        @code
        {
            protected string _IntSideGrid = string.Empty;
            protected string IntSideGrid
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntSideGrid = doorConfig.INTSIDEGRID;
                    }
                    return _IntSideGrid;
                }
                set
                {
                    _IntSideGrid = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTSIDEGRID = _IntSideGrid;
                        doorConfig.borderColors["INTSIDEGRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }



        @* 8 INTSIDEGRIDCLRID צבע סורג צד פנים *@

    </tr>
    <tr id="tblDecorIntL2h">
        <th class="@doorConfig.thClasses["INTSIDEGRIDBKGDCLRID"]">צבע רקע לסורג צד פנים</th>  @*  new 26/04/2023 *@
        <th class="@doorConfig.thClasses["INTSEPLINES"]">פסי הפרדה פנים</th>
        <th class="@doorConfig.thClasses["INTFINMODERNSEPLINE"]">סוג פסי הפרדה פנים</th>
        <th class="@doorConfig.thClasses["INTSEPLINESCLRID"]">צבע פסי הפרדה פנים</th>
        <th class="@doorConfig.thClasses["INTPERIFPROFILETYPE"]">סוג פרופיל היקפי פנים</th>  @* new (13) 4mm | 8mm *@
        <th class="@doorConfig.thClasses["INTPERIFPROFILECLRID"]">צבע פרופיל היקפי פנים</th>
        <th class="@doorConfig.thClasses["INTINSERTCLRID"]">צבע פנים לאינסרט</th>
    </tr>
    <tr id="tblDecorIntL2d">

        @*         INTSIDEGRIDBKGDCLRID   (9) צבע רקע לסורג צד פנים   new 26/04/2023     *@
        <td id="tdIntSideGridBkgdClr">
            @{
                int i421 = Array.IndexOf(UiLogic.propNames, "INTSIDEGRIDBKGDCLRID");

                <input list="lstIntSideGridBkgdClrs" name="dlstIntSideGrdidBkgdClr" @bind="IntSideGridBkgdClrDes" class="@doorConfig.borderColors["INTSIDEGRIDBKGDCLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["INTSIDEGRIDBKGDCLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("INTSIDEGRIDBKGDCLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i421]]" />
                <datalist id="lstIntSideGridBkgdClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntSideGridBkgdClrId = 0;
            //protected int ExtModerPlateClr
            protected string IntSideGridBkgdClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntSideGridBkgdClrId = doorConfig.INTSIDEGRIDBKGDCLRID;
                    }
                    return UiLogic.colorDes(_IntSideGridBkgdClrId);
                }
                set
                {
                    _IntSideGridBkgdClrId = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTSIDEGRIDBKGDCLRID = _IntSideGridBkgdClrId;
                        doorConfig.borderColors["INTSIDEGRIDBKGDCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        <td id="tdIntSepLines" disabled="true">
            <select name="dlstIntSepLines" @bind="IntSepLines"
                    disabled="@doorConfig.disabledFlds["INTSEPLINES"]"
                    class="@doorConfig.borderColors["INTSEPLINES"]">
                <option></option>
                <option>עם</option>
                <option>ללא</option>
            </select>
        </td>
        @code
        {
            protected string _IntSepLines = string.Empty;
            protected string IntSepLines
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntSepLines = doorConfig.INTSEPLINES;
                    }
                    return _IntSepLines;
                }
                set
                {
                    _IntSepLines = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTSEPLINES = _IntSepLines;
                        doorConfig.borderColors["INTSEPLINES"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        applySepLines();
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }

        @* disabled="@UiLogic.hideFld(doorConfig, "tdIntFinModernSepLine")" *@
        <td id="tdIntFinModernSepLine">
            <select name="dlstIntFinModernSepLine" @bind="IntFinModernSepLine"
                    disabled="@doorConfig.disabledFlds["INTFINMODERNSEPLINE"]"
                    class="@doorConfig.borderColors["INTFINMODERNSEPLINE"]">
                <option></option>
                <option>חלק</option>
                <option>מחורץ</option>
            </select>
        </td>
        @code
        {
            protected string _IntFinModernSepLine = string.Empty;
            protected string IntFinModernSepLine
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntFinModernSepLine = doorConfig.INTFINMODERNSEPLINE;
                    }
                    return _IntFinModernSepLine;
                }
                set
                {
                    _IntFinModernSepLine = value;
                    if (doorConfig != null)
                    {
                        doorConfig.INTFINMODERNSEPLINE = _IntFinModernSepLine;
                        doorConfig.borderColors["INTFINMODERNSEPLINE"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @* disabled="@UiLogic.hideFld(doorConfig, "tdIntSepLinesClr")" *@
        <td id="tdIntSepLinesClr">
            @{
                int i1416 = Array.IndexOf(UiLogic.propNames, "INTSEPLINESCLRID");
                @* <select name="dlstIntSepLinesClr" @bind="IntSepLinesClr" class="@doorConfig.borderColors["INTSEPLINESCLRID"]" *@
                <input list="lstIntSepLinesClrs" name="dlstIntSepLinesClr" @bind="IntSepLinesClrDes" class="@doorConfig.borderColors["INTSEPLINESCLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["INTSEPLINESCLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("INTSEPLINESCLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i1416]]" />
                <datalist id="lstIntSepLinesClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntSepLinesClr = 0;
            //protected int IntSepLinesClr
            protected string IntSepLinesClrDes

            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntSepLinesClr = doorConfig.INTSEPLINESCLRID;
                    }
                    return UiLogic.colorDes(_IntSepLinesClr);
                }
                set
                {
                    _IntSepLinesClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTSEPLINESCLRID = _IntSepLinesClr;
                        doorConfig.borderColors["INTSEPLINESCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "tdecor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
        @*  disabled="@UiLogic.hideFld(doorConfig, "tdIntPerifProfileClr")*@
        <td id="tdIntPerifProfileClr">
            @{
                int i1417 = Array.IndexOf(UiLogic.propNames, "INTPERIFPROFILECLRID");
                @* <select name="dlstIntPerifProfileClr" @bind="IntPerifProfileClr" class="@doorConfig.borderColors["INTPERIFPROFILECLRID"]" *@
                <input list="lstIntProfileClrs" name="dlstIntPerifProfileClr" @bind="IntPerifProfileClrDes" class="@doorConfig.borderColors["INTPERIFPROFILECLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["INTPERIFPROFILECLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("INTPERIFPROFILECLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i1417]]" />
                <datalist id="lstIntProfileClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntPerifProfileClr = 0;
            //protected int IntPerifProfileClr
            protected string IntPerifProfileClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntPerifProfileClr = doorConfig.INTPERIFPROFILECLRID;
                    }
                    return UiLogic.colorDes(_IntPerifProfileClr);
                }
                set
                {
                    _IntPerifProfileClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTPERIFPROFILECLRID = _IntPerifProfileClr;
                        doorConfig.borderColors["INTPERIFPROFILECLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        UiLogic.clearFollowingTabFields(doorConfig, "decor");
                    }
                }
            }
        }
        @* disabled="@UiLogic.hideFld(doorConfig, "thIntInsertCoverClr")" *@
        <td id="tdIntInsertCoverClr">
            @{
                int i1418 = Array.IndexOf(UiLogic.propNames, "INTINSERTCLRID");
                @* <select name="dlstIntInsertCoverClr" @bind="IntInsertCoverClr" class="@doorConfig.borderColors["INTINSERTCLRID"]" *@
                <input list="lstIntInsertClrs" name="dlstIntInsertCoverClr" @bind="IntInsertClrDes" class="@doorConfig.borderColors["INTINSERTCLRID"]"
                       autocomplete="off"
                       disabled="@doorConfig.disabledFlds["INTINSERTCLRID"]"
                       @onfocus="@( () => UiLogic.HasFocus("INTINSERTCLRID", doorConfig) )"
                       @onkeypress="doorConfig.KeyPressHandler"
                       @ref="doorConfig.dicRefs[UiLogic.propNames[i1418]]" />
                <datalist id="lstIntInsertClrs">
                    @if (PrApiCalls.lstColors != null)
                    {
                        @foreach (TRSH_COLOR_Class c in PrApiCalls.lstColors)
                        {
                            <option value="@c.PARTDES">@c.PARTDES</option>
                        }
                    }
                </datalist>
            }
        </td>
        @code
        {
            protected int _IntInsertCoverClr = 0;
            //protected int IntInsertCoverClr
            protected string IntInsertClrDes
            {
                get
                {
                    if (doorConfig != null)
                    {
                        _IntInsertCoverClr = doorConfig.INTINSERTCLRID;
                    }
                    return UiLogic.colorDes(_IntInsertCoverClr);
                }
                set
                {
                    _IntInsertCoverClr = UiLogic.getColorIdByClrDes(value);
                    if (doorConfig != null)
                    {
                        doorConfig.INTINSERTCLRID = _IntInsertCoverClr;
                        doorConfig.borderColors["INTINSERTCLRID"] = (!string.IsNullOrEmpty(value) ? "blueBorder" : "redBorder");
                        //UiLogic.clearFollowingTabFields(doorConfig, "decor");
                        if (UiLogic.try2UpdateBtnClass(doorConfig, "decor"))
                            config4.RefreshState();
                    }
                }
            }
        }
    </tr>

    <tr id="tblDecorIntL2h"></tr>
    <tr id="tblDecorIntL2d"></tr>
</table>


@page "/Extdecor"

@* @inherits ExtdecorBase *@

@inject IJSRuntime Js

@implements IDisposable

@inject NavigationManager Navigator

<style>
    th, td {
        padding: 15px;
        text-align: center;
    }
</style>

@code
{
    [Parameter]
    public DoorConfig doorConfig { get; set; }

    [Parameter]
    public bool MovingwingIsFull { get; set; }
}

<h3>Extdecor</h3>

@code {
    protected override async Task OnInitializedAsync()
    {
        if (!MovingwingIsFull)
        {
            // navigate back to Movingwing 
            //[TODO]  Navigator.NavigateTo("Movingwing");
        }
        //var doorConfigJsonV = await ProtectedSessionStore.GetAsync<string> ("doorConfigJson");
        //if (doorConfigJsonV.Success)
        //{
        //    string doorConfigJson2 = doorConfigJsonV.Value;
        //    if (!string.IsNullOrEmpty(doorConfigJson2))
        //         doorConfig = Newtonsoft.Json.JsonConvert.DeserializeObject<DoorConfig>(doorConfigJson2);
        UiLogic.restoreDoorConfig(ProtectedSessionStore, doorConfig);          

         Js.InvokeVoidAsync("alert", string.Format("in Extdecor:onInitializedAsync doorConfig.DRIL4TWOSIDESIDS = {0}", doorConfig.DRIL4TWOSIDESIDS));  //debug
     }
    
    
    async void IDisposable.Dispose()
    {
        //int x = 17;
        //if (x == 18)
        //{
        //    Js.InvokeVoidAsync("alert", "error !");
        //    //NavigationManager.NavigateTo("Movingwing", true);
        //}
    }
}

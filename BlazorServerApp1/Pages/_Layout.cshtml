@using Microsoft.AspNetCore.Components.Web
@namespace BlazorServerApp1.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BlazorServerApp1.styles.css" rel="stylesheet" />
    <link href="css/myStyles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
     function invokeTabKey(Elements) {
        // get the active element when Enter was pressed and 
        // if it is an input, focus the next input
        // NOTE: You cannot really trigger the browser event -
        //       even if you do, the browser won't execute the action 
        //       (such as focusing the next input) so you have to define the action
        var currE = document.activeElement;
        alert(currE.name + " " + Elements[1]);
        for (var i = 0; i < Elements.length-1; i++) 
        {
           if (Elelements[i] == currE.name) 
           {
              var next = document.getElementByName(Elements[i + 1]);
              alert(next.name);
              if (next && next.focus) 
              {
                        next.focus();
              }
              break;
           }
        }
    }
   </script>
    

</body>
</html>

@page "/"

@using BlazorServerApp1.Pages
@using BlazorServerApp1.Data
@using System.Globalization;

@* @page "/Configurator4" *@

@inherits Configurator3Base

@inject IJSRuntime Js

<EditForm Model=@doorConfig>
    <DataAnnotationsValidator />
    <ValidationSummary />
    <h3>Configurator4</h3>

    @code {
        //protected bool hideCustDes { get; set; } = false;
        protected static string errMsg = string.Empty;

        private bool openMsgBox = false;
        private string errMsg2 = string.Empty;
        private string msgCaption = "שגיאה";
        private string msgClass = "modal-body redMessage";
        private string titleClass = "modal-title redTitle";

        protected List<CUSTOMER_Class>? lstCustomers = PrApiCalls.getCustomers(ref errMsg);
        protected List<AGENT_Class>? lstAgents = PrApiCalls.getAgents(ref errMsg);

        //BlazorServerApp1.Pages.Configurator3
        protected bool hideDivDoor = true;

        public bool MovinwingIsFull = false;
        public bool ExtdecorIsFull = false;
        public bool IntdecorIsFull = false;
        public DoorConfig? doorConfig;
        CultureInfo hebrew;
        CultureInfo english;



        protected override async Task OnInitializedAsync()
        {
            doorConfig = new DoorConfig();
            doorConfig.initBorderColors();

            formDate = DateTime.Now;
            UiLogic.initPropNames(doorConfig);
            UiLogic.AppAllDefaults(doorConfig, ref errMsg);

            //await ProtectedSessionStore.SetAsync("doorConfig", doorConfig);

            hebrew = new CultureInfo("he-IL", false);
            english = new CultureInfo("en-US", false);
        }

    }


    <table id="tblMainContainer">
        <tr>
            <td>
                <div id="divMainMenuButtons" dir="rtl" class="menuButtonsDiv">
                    <table id="tblmenuButtons">
                        <tr>
                            <td>
                                <button name="btnGeneral" class="button">פרטים כלליים</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button name="btnProdDes" class="button">פרטי המוצר</button>
                            </td>
                        </tr>
                        @{
                            bool showTabs = false;
                        }
                        @if (!hideDivDoor)
                        {
                            <tr>
                                <td>
                                    <table id="tblTabButtons">
                                        <tr>
                                            <td>
                                                <button name="btnmovingwing" class="button">כנף נעה</button>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <button name="btnextdecor" class="button" @onclick=@( () => @showExtdecor()) >פרטי דקורציה חוץ</button>
                                            </td>
                                            @{
                                                void showExtdecor()
                                                {
                                                    Type dyncompType = typeof(Extdecor);
                                                    Dictionary<string, object> edParams = new Dictionary<string, object>();
                                                    edParams.Add("doorConfig", doorConfig);
                                                    edParams.Add("disableLogo", disableLogo);
                                                    bool showEd = false;
                                                                        }
                                            }
                                        </tr>
                                        <tr>
                                            <td>
                                                <button name="btnintdecor" class="button">פרטי דקורציה פנים</button>
                                            </td>
                                        </tr>
                                        <tr>
                                            @{
                                                bool disableSw = false;
                                                disableSw = (doorConfig.WINGSNUM == "כנף");
                                            }
                                            <td>
                                                <button name="btnstaticwing" class="button" disabled= "@disableSw" >כנף קבועה</button>
                                            </td>
                                           
                                        </tr>
                                        <tr>
                                            <td>
                                                <button name="btnhinges" class="button">פרטי צירים</button>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <button name="btnhandle" class="button">ידיות אומנותיות</button>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <button name="btnaccessories" class="button">נילווים</button>
                                            </td>
                                        </tr>
                                    </table>
                                    <!-- end tblTabButtons -->
                            </td>
                            </tr>
                        }

                    </table>
                    <!-- end tblmenuButtons -->
                </div>
                <!-- end of divMainMenuButtons -->
            </td>
            <td id="tdMainForm">
                <div id="divMainForm" dir="rtl" class="mainFormDiv">
                    <div id="divHeader" dir="rtl" style="border: solid; border-color: black; border-radius: 10px">
                        <table id="tblLine1">
                            <tr>
                                <th>תאריך</th>
                                <th>שם ממלא שאלון</th>
                                <th>אסמכתא</th>
                            </tr>
                            <tr id="trHeaderL1Controls">
                                <td id="tdDate">
                                    <input type="date" name="txtDate" @bind="formDate" />
                                    @code {
        // public DoorConfig? doorConfig; // = new DoorConfig();

        private DateTime _formDate = DateTime.Now;
        protected DateTime formDate
        {
                                        get
                                        {
                                            if (doorConfig != null)
                                                _formDate = Convert.ToDateTime(doorConfig.FORMDATE);

                                            return _formDate;
                                        }
                                        set
                                        {
                                            _formDate = value;
                                            if (doorConfig == null)
                                            {
                                                doorConfig = new DoorConfig();
                                                doorConfig.initBorderColors();
                                            }
                                            doorConfig.FORMDATE = Helper.formatDate4Rest(_formDate);
                                        }
        }
                                    }
                                </td>
                                <!-- end tdDate-->
                                <td id="tdFormFiller">
                                    <input name="txtFormFiller" @bind="formFiller" dir="rtl"
                                           @onfocus="@( () => formFillerHasFocus() )"
                                           @onblur="@( () => formFillerLostFocus() )" />
                                    @code {
        protected string _formFiller;
        protected string formFiller
        {
                                        get
                                        {
                                            if (doorConfig != null)
                                                _formFiller = doorConfig.FORMFILLER;

                                            return _formFiller;
                                        }
                                        set
                                        {
                                            _formFiller = value;
                                            if (doorConfig != null)
                                                doorConfig.FORMFILLER = _formFiller;
                                        }
        }
        void formFillerHasFocus()
        {
                                        // System.Windows.Forms.InputLanguage.CurrentInputLanguage = System.Windows.Forms.InputLanguage.FromCulture(hebrew);
        }
        void formFillerLostFocus()
        {
                                        //System.Windows.Forms.InputLanguage.CurrentInputLanguage = System.Windows.Forms.InputLanguage.FromCulture(hebrew);
        }
                                    }
                                </td>
                                <!-- end tdFormFiller -->
                                <td id="tdReference">
                                    <input name="txtReference" @bind="reference" @ref="txtReference" />
                                    @code {

        private ElementReference txtReference;
        protected string _reference;
        protected string reference
        {
                                        get
                                        {
                                            if (doorConfig != null)
                                                _reference = doorConfig.REFERENCE;

                                            return _reference;
                                        }
                                        set
                                        {
                                            _reference = value;

                                            if (doorConfig != null)
                                                if (!string.IsNullOrEmpty(PrApiCalls.getReference(_reference, ref errMsg)))
                                                {
                                                    //UiLogic.displayErrMsg(lblMsgL1, "אסמכתא עם מספר זה כבר קיימת במערכת");
                                                    //
                                                    //return;
                                                    //Js.InvokeVoidAsync("alert", "אסמכתא עם מספר זה כבר קיימת במערכת");
                                                    msgCaption = "שגיאה";
                                                    msgClass = "modal-body redMessage";
                                                    errMsg2 = "אסמכתא עם מספר זה כבר קיימת במערכת";
                                                    openMsgBox = true;
                                                    txtReference.FocusAsync();
                                                }
                                                else
                                                    doorConfig.REFERENCE = _reference;
                                        }
        }
                                    }
                                </td>
                                <!-- end tdReference -->
                                <td>
                                    <label id="lblMsgL1" />
                                </td>
                            </tr>
                            <!-- end trHeaderL1Controls -->
                        </table>
                        <!-- end tblLine1 -->

                        <table id="tblLine2">
                            <tr>
                                <th>שם משווק</th>
                                <th>שם לקוח קצה</th>
                                <th>כתובת</th>
                                <th>כתובת לאספקה</th>
                            </tr>
                            <tr id="trLine2Controls">
                                <td>
                                    <select name="dlstAgent" @bind="AGENT" class="@doorConfig.borderColors["AGENT"]">
                                        @if (lstAgents != null)
                                        {
                                            @foreach (AGENT_Class a in lstAgents)
                                            {
                                                <option value="@a.AGENT">@a.AGENTNAME</option>
                                            }
                                        }
                                    </select>
                                </td>
                                @code {
        private int _AGENT = 0;
        protected int AGENT
        {
                                    get
                                    {
                                        if (doorConfig != null)
                                            _AGENT = doorConfig.AGENT;

                                        return _AGENT;
                                    }
                                    set
                                    {
                                        _AGENT = value;
                                        if (doorConfig != null)
                                        {
                                            doorConfig.AGENT = _AGENT;
                                            doorConfig.borderColors["AGENT"] = (value != 0 ? string.Empty : "redBorder");
                                        }
                                    }
        }
                                }
                                <td>
                                    <select name="dlstCustDes" @bind="CUST" class="@doorConfig.borderColors["CUST"]">
                                        @if (lstCustomers != null)
                                        {
                                            @foreach (CUSTOMER_Class c in lstCustomers)
                                            {
                                                <option value="@c.CUST">@c.CUSTDES</option>
                                            }
                                        }
                                    </select>
                                </td>
                                @code {
        public bool disableLogo = false;
        private int _CUST = 0;
        protected int CUST
        {
                                    get
                                    {
                                        if (doorConfig != null)
                                            _CUST = doorConfig.CUST;

                                        return _CUST;
                                    }
                                    set
                                    {
                                        _CUST = value;
                                        if (doorConfig != null)
                                        {
                                            doorConfig.CUST = _CUST;
                                            // set Address and Logo based on CUST
                                            CUSTOMER_Class cust = PrApiCalls.getCustomer((int)doorConfig.CUST, ref errMsg);
                                            Address = string.Format("{0} {1} {2}", cust.ADDRESS, cust.ADDRESS2, cust.ADDRESS3);
                                            doorConfig.borderColors["CUST"] = (value != 0 ? string.Empty : "redBorder");
                                            if (!string.IsNullOrEmpty(cust.TRSH_LOGO) && cust.TRSH_LOGO == "Y")
                                            {
                                                disableLogo = true;
                                                doorConfig.LOGO = string.Empty;   //chkbLogo.Checked = false;
                                            }
                                            //
                                        }

                                    }
        }
                                }
                                @* end CUST *@

                                <td>
                                    <input dir="rtl" @bind="Address" />
                                </td>
                                @code {
        protected string _Address = string.Empty;
        protected string Address
        {
                                    get
                                    {
                                        if (doorConfig != null)
                                        {
                                            _Address = doorConfig.ADDRESS;
                                        }
                                        return _Address;
                                    }
                                    set
                                    {
                                        _Address = value;
                                        if (doorConfig != null)
                                            doorConfig.ADDRESS = _Address;
                                    }
        }
                                }
                                @* end Address  *@
                                <td>
                                    <input dir="rtl" @bind="ShipAddress" size="80" />
                                </td>
                                @code {
        protected string _ShipAddress = string.Empty;
        protected string ShipAddress
        {
                                    get
                                    {
                                        if (doorConfig != null)
                                        {
                                            _ShipAddress = doorConfig.SHIPADDRESS;
                                        }
                                        return _ShipAddress;
                                    }
                                    set
                                    {
                                        _ShipAddress = value;
                                        if (doorConfig != null)
                                            doorConfig.SHIPADDRESS = _ShipAddress;
                                    }
        }
                                }
                                @* end ShipAddress *@
                            </tr>
                            <!-- end trLine2Controls -->
                        </table>
                        <!-- end tblLine2 -->

                        <table id="tblProducts">
                            <tr>
                                <td id="tdBtnDoor">
                                    <button name="btnDoor" @onclick="btnDoorClicked">דלת</button>
                                    @code
                                    {
        private void btnDoorClicked()
        {
                                        hideDivDoor = false;

        }
                                    }
                                </td>
                                <!-- end tdBtnDoor -->
                                <td>
                                    <button name="btnLintel">משקוף</button>
                                </td>
                                <td>
                                    <button name="btnCover">חיפוי</button>
                                </td>
                                <td>
                                    <button name="btnSideUnit">יחידת צד</button>
                                </td>
                                <td>
                                    <button name="btnECabinet">ארון חשמל</button>
                                </td>
                                <td>
                                    <button name="btnShelves">מדפים</button>
                                </td>
                            </tr>
                        </table>
                        <!--end tblProducts -->
                    </div>
                    <!--end of divHeader -->
                    <div id="divDoor" dir="rtl" hidden="@hideDivDoor">

                        <div id="divDoorTitle" dir="rtl" style="border: solid; border-color: black; border-radius: 10px">
                            <table id="tblDoorTitle">
                                <tr>
                                    <th id="thWingsNum">מיפתח</th>
                                    <th id="thOpenMode">צורת פתיחה</th>
                                    <th id="thComplient">דלת תואם אלידור</th>
                                    <th id="thPARTNAME">דגם</th>
                                    <th id="thFamily">סידרה</th>
                                </tr>
                                <tr>
                                    <td>
                                        <select name="dlstWingsNum" @bind="WingsNum">
                                            <option>בחר סוג מיפתח</option>
                                            <option>כנף</option>
                                            <option>כנף וחצי</option>
                                            <option>דו כנפי</option>
                                        </select>
                                    </td>
                                    @code
                                    {
        //protected bool disableStaticWing = false;
        protected string _WingsNum = string.Empty;
        protected string WingsNum
        {
                                        get
                                        {
                                            if (doorConfig != null)
                                            {
                                                _WingsNum = doorConfig.WINGSNUM;
                                            }
                                            return _WingsNum;
                                        }
                                        set
                                        {
                                            _WingsNum = value;
                                            if (doorConfig != null)
                                                doorConfig.WINGSNUM = _WingsNum;

                                            //disableStaticWing =  (_WingsNum == "כנף");
                                        }
        }

                                    }
                                    <td>
                                        <select name="dlstOpenMode">
                                            <option>בחר צורת פתיחה</option>
                                            <option>החוצה</option>
                                            <option>פנימה</option>
                                        </select>
                                    </td>

                                    <td>
                                        <input type="checkbox" name="chkbComplient" @bind="Complient" />
                                    </td>
                                    @code
                                    {
        protected bool _Complient = false;
        protected bool Complient
        {
                                        get
                                        {
                                            if (doorConfig != null)
                                            {
                                                _Complient = (doorConfig.COMPLIENTDOOR == "Y");
                                            }
                                            return _Complient;
                                        }
                                        set
                                        {
                                            _Complient = value;
                                            if (doorConfig != null)
                                                doorConfig.COMPLIENTDOOR = (_Complient ? "Y" : "");
                                        }
        }

                                    }
                                    <td>
                                        <select name="dlstPARTNAME" @bind="PARTNAME" class="@doorConfig.borderColors["PARTNAME"]">
                                            @if (PrApiCalls.lstParts != null)
                                            {
                                                @foreach (PART_Class p in PrApiCalls.lstParts)
                                                {
                                                    <option value="@p.PARTNAME">@p.PARTDES</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    @code
                                    {
        protected string _PARTNAME = string.Empty;
        protected string PARTNAME
        {
                                        get
                                        {
                                            if (doorConfig != null)
                                            {
                                                _PARTNAME = doorConfig.PARTNAME;
                                                if (string.IsNullOrEmpty(_PARTNAME))
                                                    _FAMILYDES = string.Empty;
                                            }
                                            return _PARTNAME;
                                        }
                                        set
                                        {
                                            _PARTNAME = value;
                                            if (doorConfig != null)
                                            {
                                                doorConfig.PARTNAME = _PARTNAME;
                                                PART_Class part = PrApiCalls.getPart(doorConfig.PARTNAME, ref errMsg);
                                                //FamilyOfPart_Class familyOfPart = PrApiCalls.getFamilyOfPart(doorConfig.PARTNAME, ref errMsg);
                                                FAMILYDES = part.FAMILYDES;         //familyOfPart.FAMILYDES;
                                                doorConfig.FAMILYNAME = part.FAMILYNAME;  //[NonSerialized]
                                                                                          //doorConfig.FAMILY = PrApiCalls.getFAMILY(part.FAMILYNAME, ref errMsg);
                                                doorConfig.meaged = part.MPARTNAME;  //PrApiCalls.getMeagedOfPart(PARTNAME, ref errMsg);
                                                doorConfig.TRSH_DOOR_HWCATCODE = part.TRSH_DOOR_HWCATCODE;    //PrApiCalls.getDoorHwCatCode(doorConfig.PARTNAME, ref errMsg);
                                                doorConfig.borderColors["MPARTNAME"] = (!(string.IsNullOrEmpty(value)) ? string.Empty : "redBorder");
                                                UiLogic.applyPartDefaults(doorConfig);
                                            }
                                        }

        }
                                    }
                                    <td>
                                        <input name="txtFAMILY" disabled=@true @bind="FAMILYDES" />
                                    </td>
                                    @code
                                    {
        protected string _FAMILYDES;
        protected string FAMILYDES
        {
                                        get
                                        {
                                            return _FAMILYDES;
                                        }
                                        set
                                        {
                                            _FAMILYDES = value;
                                        }
        }

                                    }
                                </tr>
                            </table>
                            <!-- end tblDoorTitle-->
                        </div>
                        <!-- end divDoorTitle -->



                        <br />
                        <br />
                        <br />
                        @{
                            Type dyncompType = typeof(Movingwing);
                            Dictionary<string, object> mwParams = new Dictionary<string, object>();
                            mwParams.Add("doorConfig", doorConfig);
                            mwParams.Add("disableLogo", disableLogo);
                            bool showMw = false;

                            @*
                                openMsgBox = false;
                                errMsg2 = string.Empty;
                                if (doorConfig.CUST == null || doorConfig.CUST == 0)
                                errMsg2 += "חובה לציין לקוח";
                                if (string.IsNullOrEmpty(doorConfig.PARTNAME))
                                errMsg2 += " חובה לציין דגם , ";
                                if (!string.IsNullOrEmpty(errMsg2))
                                {
                                //Js.InvokeVoidAsync("alert", errMsg);
                                openMsgBox = true;
                                showMw = false;
                                }
                            *@
                            showMw = (doorConfig.CUST != 0 && !string.IsNullOrEmpty(doorConfig.PARTNAME));
                        }
                        }
                        @if (showMw)
                        {
                            <div dir="rtl" style="border: solid; border-color: black; border-radius: 10px">
                                <DynamicComponent Type="@dyncompType" Parameters="@mwParams" />
                            </div>
                        }
                        @*
                            <div id="divTabControl"  >
                            <TabControl doorConfig="doorConfig">
                            <TabPage Text="כנף נעה" TabName="movingwing">
                            <div id="divMovingWing" class="myDiv">
                            <Movingwing doorConfig="@doorConfig" disableLogo="@disableLogo"></Movingwing>
                            </div>
                            </TabPage>
                            <TabPage Text="פרטי דקורציה חוץ" TabName="extdecor">
                            <div id="divExtDecor" class="myDiv">
                            <Extdecor doorConfig="@doorConfig" MovingwingIsFull="@MovinwingIsFull" />
                            </div>
                            </TabPage>
                            <TabPage Text="פרטי דקורציה פנים" TabName="intdecor">
                            <div id="divIntDecor" class="myDiv">
                            <Intdecor doorConfig="@doorConfig" ExtdecorIsFull="@ExtdecorIsFull" />
                            </div>
                            </TabPage>
                            <TabPage Text="כנף קבועה" TabName="staticwing">
                            <div id="divStaticWing" class="myDiv">
                            <Staticwing doorConfig="@doorConfig" />
                            </div>
                            </TabPage>
                            <TabPage Text="פרטי צירים" TabName="hinges">
                            <div id="divHinges" class="myDiv">
                            <Hinges doorConfig="@doorConfig" />
                            </div>
                            </TabPage>
                            <TabPage Text="ידית אומנותית" TabName="handle">
                            <div id="divHandles" class="myDiv">
                            <Handle doorConfig="@doorConfig" />
                            </div>
                            </TabPage>
                            <TabPage Text="נילווים" TabName="accessories">
                            <div id="divAccessories" class="myDiv">
                            <Accessories doorConfig="@doorConfig" />
                            </div>
                            </TabPage>
                            </TabControl>
                            </div>
                            <!-- end divTabControl -->
                        *@
                    </div>
                    <!-- end divDoor -->

                    <div id="divCommentsAndSave" dir="rtl" style="padding-top: 30px;">
                        <table id="tblComments">
                            <tr>
                                <th id="thComments" style="text-align: right">הערות</th>
                            </tr>
                            <tr>
                                <td>
                                    <input name="txtComments" size="120" @bind="Comments" AutoCompleteType="Disabled" />
                                </td>
                                @code
                                {
        protected string _Comments = string.Empty;
        protected string Comments
        {
                                    get
                                    {
                                        if (doorConfig != null)
                                        {
                                            _Comments = doorConfig.COMMENTS;
                                        }
                                        return _Comments;
                                    }
                                    set
                                    {
                                        _Comments = value;
                                        if (doorConfig != null)
                                            doorConfig.COMMENTS = _Comments;
                                    }
        }
                                }
                            </tr>
                        </table>
                        <p />
                        <br />
                        <br />
                        <table id="tblSaveClear">
                            <tr>
                                <td>
                                    <button name="btnSave" @onclick="btnSave_Click">שמירה בפריוריטי</button>
                                </td>
                                @code {
        private void btnSave_Click()
        {
                                    string prevTab = "accessories";
                                    string prevText = "נילווים";
                                    if (!UiLogic.tabPageIsFilled(prevTab, doorConfig))
                                    {
                                        errMsg2 = string.Format("יש למלא את כל השדות בלשונית '{0}'  י", prevText);
                                        // Js.InvokeVoidAsync("alert", errMsg);
                                        openMsgBox = true;
                                        return;
                                    }

                                    doorConfig.FAMILY = PrApiCalls.getFAMILY(doorConfig.FAMILYNAME, ref errMsg);
                                    var response = (PrApiCalls.SendToPriority("TRSH_DOORCONFIG", doorConfig, ref errMsg)).StatusCode;

                                    if (response != System.Net.HttpStatusCode.Created)
                                    {
                                        //myMessageBox.Show(Page, errMsg);
                                        //UiLogic.displayErrMsg(lblMsg, "Api call failed : " + errMsg);
                                        //Js.InvokeVoidAsync("alert", errMsg);
                                        msgCaption = "שגיאה";
                                        errMsg2 = errMsg;
                                        msgClass = "modal-body redMessage";
                                        openMsgBox = true;

                                        myLogger.log.Info("Api call failed : " + errMsg);
                                    }
                                    else
                                    {
                                        string lastREFERENCE = PrApiCalls.getLastREFERENCE(ref errMsg);
                                        errMsg2 = string.Format("השאלון {0} נשמר בהצלחה, השאלון האחרון במערכת הוא {1}   י", doorConfig.REFERENCE, lastREFERENCE);
                                        //Js.InvokeVoidAsync("alert", errMsg2);
                                        msgCaption = "הודעה";
                                        titleClass = "modal-title greenTitle";
                                        msgClass = "modal-body greenMessage";
                                        openMsgBox = true;

                                        //UiLogic.ClearAllControls();
                                        //doorConfig = new DoorConfig();
                                    }
        }
                                }
                                <td>
                                    <button name="btnClear" @onclick="btnClear_Click">ניקוי טופס</button>
                                </td>
                                @code {
        private void btnClear_Click()
        {
                                    UiLogic.clearDoorConfig(doorConfig);
        }
                                }
                            </tr>
                        </table>
                        <!-- end tblSaveClear -->

                    </div>
                    <!-- end divCommentsAndSave -->
                </div>
                <!-- end divMainForm -->
            </td>
            <!-- end tdMainForm -->
        </tr>
    </table>
    <!-- end tblMainContainer -->
    <div id="divBuildTime">
        <p style="float:left">@buildTime</p>
        @code {
        protected string buildTime = string.Format("Build Date : {0}", Helper.formatDateTime(Helper.getBuildTime()));
        }
    </div>
    <!-- end divBuildTime -->
</EditForm>

@if (openMsgBox)
{
    <MsgBox Caption="@msgCaption"
        Message="@errMsg2"
        OnClose="OnDialogClose"
        MsgTitleCssClass="@titleClass"
        ErrMsgCssClass="@msgClass">
    </MsgBox>
    @code
    {
    private void OnDialogClose()
    {
        openMsgBox = false;
        errMsg2 = string.Empty;
    }
}
}